{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nourou\\\\Documents\\\\Developpement WEB\\\\CamSecurite-django-react\\\\frontend\\\\src\\\\pages\\\\PanierProcess.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport payment from './assets/img/payment.gif';\nimport { gsap } from \"gsap\";\nimport { Outlet, Link, useNavigate } from 'react-router-dom';\nimport Choixlivraison from './components/ChoixLivraison';\nimport Commanderecap from './components/CommandeRecap';\nimport Livraison from './components/Livraison';\nimport Panier from './components/Panier';\nimport Stepbarre from './components/StepBarre';\nimport $ from 'jquery';\nimport Payementchoix from './components/PayementChoix';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Panierprocess = props => {\n  _s();\n\n  let navigate = useNavigate();\n  const [panierItems, setPanieritems] = useState(['']);\n  const [sousTotal, setSoustotal] = useState('');\n  const [total, setTotal] = useState('');\n  const [livraison, setLivraison] = useState(null);\n  const [panier, setPanier] = useState('');\n  const [u, setU] = useState('');\n\n  const getCSRF = async () => {\n    var url2 = \"http://localhost:8000/csrf/\";\n    let r = '';\n    await fetch(url2, {\n      credentials: 'include'\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"fetchCSRF panier process\");\n        r = response.json();\n      } else {\n        console.log(response, 'Mauvaise réponse du réseau');\n      }\n    }).catch(function (error) {\n      console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n    });\n    return r;\n  };\n\n  console.log('props ppp produit', props);\n  useEffect(async () => {\n    $(window).scrollTop(0);\n    let uss = \"\";\n\n    let t = async () => {\n      var url = \"http://localhost:8000/current_user/?format=json\";\n      let r = await getCSRF();\n      const csrftoken = r.csrfToken;\n      let data = await fetch(url, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        credentials: 'include'\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"current_user de panier process\", response);\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        return data;\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n      setU(data);\n      uss = data;\n    };\n\n    await t();\n\n    if (uss != \"\") {\n      var url2 = `http://localhost:8000/panier/${uss.user.id}/`;\n      let data2 = await fetch(url2).then(response => {\n        if (response.ok) {\n          console.log(\"fetch panier panier process\");\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        return data;\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n      setPanieritems(data2);\n\n      if (data2.length == 0) {\n        setPanierStep( /*#__PURE__*/_jsxDEV(Panier, {\n          user: u,\n          button: ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }, this));\n        setStepBarreBtn(\"\");\n      }\n\n      setPanier(data2[0].panier);\n      console.log(\"ddata1151\", data2);\n    } else {\n      if (localStorage.getItem('panier') == null || localStorage.getItem('panier') == undefined || localStorage.getItem('panier') == \"\") {\n        setPanierStep( /*#__PURE__*/_jsxDEV(Panier, {\n          user: u,\n          button: ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 31\n        }, this));\n        setStepBarreBtn(\"\");\n      }\n    }\n\n    return () => {};\n  }, [u.id]);\n  console.log(\"ppppppppppppppppppaaaaaannn1254\", panierItems);\n\n  const goToPanier = () => {\n    setPanierStep( /*#__PURE__*/_jsxDEV(Panier, {\n      user: u,\n      button: btnPanier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }, this));\n    setStepBarreBtn(btnPanier);\n  };\n\n  const goToLivraison = () => {\n    setPanierStep( /*#__PURE__*/_jsxDEV(Livraison, {\n      button: btnLivraison\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 23\n    }, this));\n    setStepBarreBtn(btnLivraison);\n    $(\"#stepPanier\").addClass('stepValide');\n    $(\"#panierToLivraison\").addClass(\"stepStateActive\");\n    $(\"#stepPanier\").removeClass(\"stepActive\");\n    setTimeout(() => $(\"#stepLivraison\").addClass('stepActive'), 1000);\n  };\n\n  const goToChoixLivraison = async () => {\n    let inputs = new Object();\n\n    for (let i = 0; i < $(\".inputform\").length; i++) {\n      if ($(\".inputform\")[i].value == \"\") return \"champs manquants\";\n      inputs[$(\".inputform\")[i].name] = $(\".inputform\")[i].value;\n    }\n\n    var inputsForm = JSON.stringify(inputs);\n    console.log('entrer:::::', inputsForm);\n    let r = await getCSRF();\n    console.log(\"csrftoken OK\", r.csrfToken);\n    let csrftoken = r.csrfToken;\n    let us = '';\n\n    let t = async () => {\n      var url = \"http://localhost:8000/current_user/?format=json\";\n      let r = await getCSRF();\n      const csrftoken = r.csrfToken;\n      let data = await fetch(url, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        credentials: 'include'\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"current_user de panier process\", response);\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        return data;\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n      us = data;\n    };\n\n    await t();\n\n    if (us != 'rien trouvé') {\n      var url2 = \"http://localhost:8000/users/\" + us.id + \"/\";\n      await fetch(url2, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        credentials: 'include',\n        body: inputsForm\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"fetchLogin\", response);\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        console.log(\"reponse\", data);\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n    } else {\n      localStorage.setItem('user', inputsForm);\n      console.log('user coooooooookie', localStorage.getItem('user'));\n    }\n\n    setPanierStep( /*#__PURE__*/_jsxDEV(Choixlivraison, {\n      button: btnChoixLivraison\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 23\n    }, this));\n    setStepBarreBtn(btnChoixLivraison);\n    $(\"#stepLivraison\").addClass('stepValide');\n    $(\"#livraisonToChoixLivraison\").addClass(\"stepStateActive\");\n    $(\"#stepLivraison\").removeClass(\"stepActive\");\n    setTimeout(() => $(\"#stepChoixLivraison\").addClass('stepActive'), 1000);\n  };\n\n  const goToRecap = async () => {\n    let inputs = new Object();\n    console.log('le choix de la livraison:', $(\".livChoixActive\")[0]);\n    inputs[\"livraison\"] = $(\".livChoixActive\")[0].id;\n    var inputsForm = JSON.stringify(inputs);\n    console.log('entrer:::::', inputsForm);\n    let r = await getCSRF();\n    console.log(\"csrftoken OK\", r.csrfToken);\n    let csrftoken = r.csrfToken;\n\n    let t = async () => {\n      var url = \"http://localhost:8000/current_user/?format=json\";\n      let r = await getCSRF();\n      const csrftoken = r.csrfToken;\n      let data = await fetch(url, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        credentials: 'include'\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"current_user de panier process\", response);\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        return data;\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n      return data;\n    };\n\n    let us = await t();\n\n    if (us != 'rien trouvé') {\n      var url2 = \"http://localhost:8000/choix-livraison/\" + us.id + \"/\";\n      await fetch(url2, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        credentials: 'include',\n        body: inputsForm\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"fetchLogin\", response);\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        console.log(\"reponse\", data);\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n    } else {\n      localStorage.setItem('livraison', inputsForm);\n      console.log('livraison coooooooookie', localStorage.getItem('livraison'));\n    }\n\n    setPanierStep( /*#__PURE__*/_jsxDEV(Commanderecap, {\n      setStepBarreBtn: setStepBarreBtn,\n      button: btnPayer,\n      showHideModal: props.showHideModal,\n      modalContent: props.modalContent,\n      setModalcontent: props.setModalcontent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 23\n    }, this));\n    setStepBarreBtn(btnPayer);\n    $(\"#stepChoixLivraison\").addClass('stepValide');\n    $(\"#choixLivraisonToRecapCommande\").addClass(\"stepStateActive\");\n    $(\"#stepChoixLivraison\").removeClass(\"stepActive\");\n    setTimeout(() => $(\"#stepRecapCommande\").addClass('stepActive'), 1000);\n  };\n\n  const btnPanier = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 d-flex align-items-center justify-content-center\",\n    children: panierItems != undefined ? panierItems.length == 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"produitBuyBtn\",\n      disabled: true,\n      onClick: () => goToLivraison(),\n      children: \"Valider mon panier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"produitBuyBtn\",\n      onClick: () => goToLivraison(),\n      children: \"Valider mon panier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"produitBuyBtn\",\n      onClick: () => goToLivraison(),\n      children: \"Valider mon panier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 9\n  }, this);\n\n  const btnLivraison = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 d-flex align-items-center justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"produitBuyBtn\",\n      onClick: () => goToChoixLivraison(),\n      children: \"Confirmer les informations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 9\n  }, this);\n\n  const btnChoixLivraison = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 d-flex align-items-center justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"produitBuyBtn\",\n      onClick: () => goToRecap(),\n      children: \"Choisir ce mode de livraison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 9\n  }, this);\n\n  const initialOptions = {\n    \"client-id\": \"ASFEAZSj8J9EWXzFzTRIqT9Frn3FONIEgXx87hRWxhJyCSv7_SshAkT1TW0OSjTySDAb4cEXdVW7olO3\",\n    currency: \"EUR\"\n  };\n\n  const btnPayer = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 d-flex align-items-center justify-content-center\",\n    onClick: async e => {\n      let t = async () => {\n        var url = \"http://localhost:8000/current_user/?format=json\";\n        let r = await getCSRF();\n        const csrftoken = r.csrfToken;\n        let data = await fetch(url, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrftoken\n          },\n          credentials: 'include'\n        }).then(response => {\n          if (response.ok) {\n            console.log(\"current_user de panier process\", response);\n            return response.json();\n          } else {\n            console.log(response, 'Mauvaise réponse du réseau');\n          }\n        }).then(data => {\n          return data;\n        }).catch(function (error) {\n          console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n        });\n        setU(data);\n        return data;\n      };\n\n      let us = await t();\n      console.log(\"########################\", us);\n      let p = \"\";\n\n      if (us != 'rien trouvé') {\n        var url2 = `http://localhost:8000/panier/${us.user.id}/`;\n        let data2 = await fetch(url2).then(response => {\n          if (response.ok) {\n            console.log(\"fetch panier panier process\");\n            return response.json();\n          } else {\n            console.log(response, 'Mauvaise réponse du réseau');\n          }\n        }).then(data => {\n          return data;\n        }).catch(function (error) {\n          console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n        });\n        p = data2[0].panier;\n        console.log(\"ddata1151******************\", data2[0].panier);\n        props.showHideModal(e, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-center\",\n          style: {\n            maxWidth: '400px',\n            width: '100vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n            options: initialOptions,\n            children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n              style: {\n                layout: \"vertical\",\n                color: 'black',\n                width: \"100%\",\n                Tagline: false\n              },\n              createOrder: (data, actions) => {\n                return actions.order.create({\n                  purchase_units: [{\n                    amount: {\n                      value: String(data2[0].panier.totalaveclivraison)\n                    }\n                  }]\n                });\n              },\n              onApprove: async (datas, actions) => {\n                let t = async () => {\n                  var url = \"http://localhost:8000/current_user/?format=json\";\n                  let r = await getCSRF();\n                  const csrftoken = r.csrfToken;\n                  let data = await fetch(url, {\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-CSRFToken': csrftoken\n                    },\n                    credentials: 'include'\n                  }).then(response => {\n                    if (response.ok) {\n                      console.log(\"current_user de panier process\", response);\n                      return response.json();\n                    } else {\n                      console.log(response, 'Mauvaise réponse du réseau');\n                    }\n                  }).then(data => {\n                    return data;\n                  }).catch(function (error) {\n                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n                  });\n                  setU(data);\n                  return data;\n                };\n\n                let us = await t();\n\n                if (us != 'rien trouvé') {\n                  var url2 = \"http://localhost:8000/commande-success/\";\n                  let r = await getCSRF();\n                  const csrftoken = r.csrfToken;\n                  let data = await fetch(url2, {\n                    method: 'POST',\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-CSRFToken': csrftoken\n                    },\n                    credentials: 'include',\n                    body: JSON.stringify({\n                      'login': true,\n                      'id': us.user.id\n                    })\n                  }).then(response => {\n                    if (response.ok) {\n                      console.log(\"fetchLogin\", response);\n                      return response.json();\n                    } else {\n                      console.log(response, 'Mauvaise réponse du réseau');\n                    }\n                  }).then(data => {\n                    console.log(\"reponse\", data);\n                  }).catch(function (error) {\n                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n                  });\n                  navigate('/');\n                  props.setModalcontent( /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-column justify-content-center align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"modline\",\n                      children: [\"Merci, \", us.user.first_name, \", pour votre commande !\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 455,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"modline\",\n                      children: \"Votre commande a \\xE9t\\xE9 r\\xE9alis\\xE9 avec succ\\xE9s, nous venons de vous envoyer un email avec le detail de vos achats.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"modline\",\n                      children: \"Nous vous contacterons par email pour vous fournir les informations relative \\xE0 votre commande.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 457,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"modline\",\n                      src: payment,\n                      alt: \"\",\n                      style: {\n                        maxWidth: '400px',\n                        objectFit: 'contain'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 37\n                  }, this));\n                  gsap.from(\".modline\", {\n                    opacity: 0,\n                    scale: 0,\n                    duration: 0.4,\n                    stagger: 0.4,\n                    delay: 0.5\n                  });\n                } else {\n                  var url2 = \"http://localhost:8000/commande-success/\";\n                  let r = await getCSRF();\n                  let user = JSON.parse(localStorage.getItem('user'));\n                  let produits = localStorage.getItem('panier');\n                  var obj = JSON.parse(produits);\n                  let t = [];\n\n                  if (produits != null || produits != undefined) {\n                    for (var i in obj) {\n                      console.log(obj[i]);\n                      t.push(obj[i].id);\n                    }\n                  }\n\n                  console.log('ttttttttttttttttttttttttttttt', t);\n                  const csrftoken = r.csrfToken;\n                  let data = await fetch(url2, {\n                    method: 'POST',\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-CSRFToken': csrftoken\n                    },\n                    credentials: 'include',\n                    body: JSON.stringify({\n                      'login': false,\n                      'sexe': user.sexe,\n                      'prenom': user.prenom,\n                      'nom': user.nom,\n                      'email': user.email,\n                      'adresse': user.adresse,\n                      'ville': user.ville,\n                      'pays': user.pays,\n                      'cp': user.cp,\n                      'telephone': user.telephone,\n                      'livraison': livraison,\n                      'produits': t\n                    })\n                  }).then(response => {\n                    if (response.ok) {\n                      console.log(\"fetchLogin\", response);\n                      return response.json();\n                    } else {\n                      console.log(response, 'Mauvaise réponse du réseau');\n                    }\n                  }).then(data => {\n                    console.log(\"reponse\", data);\n                  }).catch(function (error) {\n                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n                  });\n                  navigate('/');\n                  props.setModalcontent( /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-column justify-content-center align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"modline\",\n                      children: [\"Merci, \", user.prenom, \", pour votre commande !\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 520,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"modline\",\n                      children: \"Votre commande a \\xE9t\\xE9 r\\xE9alis\\xE9 avec succ\\xE9s, nous venons de vous envoyer un email avec le detail de vos achats.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 521,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"modline\",\n                      children: \"Nous vous contacterons par email pour vous fournir les informations relative \\xE0 votre commande.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 41\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"modline\",\n                      src: payment,\n                      alt: \"\",\n                      style: {\n                        maxWidth: '400px',\n                        objectFit: 'contain'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 523,\n                      columnNumber: 41\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 37\n                  }, this));\n                  gsap.from(\".modline\", {\n                    opacity: 0,\n                    scale: 0,\n                    duration: 0.4,\n                    stagger: 0.4,\n                    delay: 0.5\n                  });\n                  localStorage.removeItem('panier');\n                  localStorage.removeItem('livraison');\n                  localStorage.removeItem('user');\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 21\n        }, this));\n      } else {\n        var url = `http://localhost:8000/panier/0/`;\n        let produits = localStorage.getItem('panier');\n        var obj = JSON.parse(produits);\n        console.log(obj);\n        let inputsForm = new Object();\n        let t = [];\n\n        if (produits != null || produits != undefined) {\n          for (var i in obj) {\n            console.log(obj[i]);\n            t.push(obj[i].id);\n          }\n        }\n\n        console.log('ttttttttttttttttttttttttttttt', t);\n        inputsForm['id'] = t;\n        console.log(inputsForm);\n        inputsForm = JSON.stringify(inputsForm);\n        let data = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: inputsForm\n        }).then(response => {\n          if (response.ok) {\n            console.log(\"fetch\");\n            return response.json();\n          } else {\n            console.log(response, 'Mauvaise réponse du réseau');\n          }\n        }).then(data => {\n          return data;\n        }).catch(function (error) {\n          console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n        });\n        setPanier(data);\n        let st = 0;\n\n        for (let d = 0; d < data.length; d++) st = st + data[d].prix;\n\n        console.log('stststststststststststststststst', st);\n        setSoustotal(st);\n        let livid = localStorage.getItem('livraison');\n        livid = JSON.parse(livid).livraison;\n        console.log('lllllllllllllllllllllll', livid);\n        let url_liv = `http://localhost:8000/choix-livraison-nolog/${livid}/`;\n        let dataliv = await fetch(url_liv).then(r => {\n          if (r.ok) {\n            console.log(\"fetchLivraison\");\n            return r.json();\n          } else {\n            console.log(r, 'Mauvaise réponse du réseau');\n          }\n        }).then(data => {\n          return data;\n        }).catch(function (error) {\n          console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n        });\n        console.log('zevjmobevuebuvebveuv51333333333333333333', dataliv);\n        setLivraison(dataliv);\n        setTotal(st + dataliv.prix);\n        props.showHideModal(e, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: '400px',\n            width: '100vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n            options: initialOptions,\n            children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n              style: {\n                layout: \"vertical\",\n                color: 'black',\n                width: \"500px\",\n                Tagline: false\n              },\n              createOrder: (data, actions) => {\n                return actions.order.create({\n                  purchase_units: [{\n                    amount: {\n                      value: st + dataliv.prix\n                    }\n                  }]\n                });\n              },\n              onApprove: async (datas, actions) => {\n                let t = async () => {\n                  var url = \"http://localhost:8000/current_user/?format=json\";\n                  let r = await getCSRF();\n                  const csrftoken = r.csrfToken;\n                  let data = await fetch(url, {\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-CSRFToken': csrftoken\n                    },\n                    credentials: 'include'\n                  }).then(response => {\n                    if (response.ok) {\n                      console.log(\"current_user de panier process\", response);\n                      return response.json();\n                    } else {\n                      console.log(response, 'Mauvaise réponse du réseau');\n                    }\n                  }).then(data => {\n                    return data;\n                  }).catch(function (error) {\n                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n                  });\n                  setU(data);\n                  return data;\n                };\n\n                let us = await t();\n\n                if (us != 'rien trouvé') {\n                  var url2 = \"http://localhost:8000/commande-success/\";\n                  let r = await getCSRF();\n                  const csrftoken = r.csrfToken;\n                  let data = await fetch(url2, {\n                    method: 'POST',\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-CSRFToken': csrftoken\n                    },\n                    credentials: 'include',\n                    body: JSON.stringify({\n                      'login': true,\n                      'id': us.user.id\n                    })\n                  }).then(response => {\n                    if (response.ok) {\n                      console.log(\"fetchLogin\", response);\n                      return response.json();\n                    } else {\n                      console.log(response, 'Mauvaise réponse du réseau');\n                    }\n                  }).then(data => {\n                    console.log(\"reponse\", data);\n                  }).catch(function (error) {\n                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n                  });\n                  navigate('/');\n                  props.setModalcontent( /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-column justify-content-center align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"modline\",\n                      children: [\"Merci, \", us.user.first_name, \", pour votre commande !\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 689,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"modline\",\n                      children: \"Votre commande a \\xE9t\\xE9 r\\xE9alis\\xE9 avec succ\\xE9s, nous venons de vous envoyer un email avec le detail de vos achats.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 690,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"modline\",\n                      children: \"Nous vous contacterons par email pour vous fournir les informations relative \\xE0 votre commande.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 691,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"modline\",\n                      src: payment,\n                      alt: \"\",\n                      style: {\n                        maxWidth: '400px',\n                        objectFit: 'contain'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 692,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 41\n                  }, this));\n                  gsap.from(\".modline\", {\n                    opacity: 0,\n                    scale: 0,\n                    duration: 0.4,\n                    stagger: 0.4,\n                    delay: 0.5\n                  });\n                } else {\n                  var url2 = \"http://localhost:8000/commande-success/\";\n                  let r = await getCSRF();\n                  let livraison = JSON.parse(localStorage.getItem('livraison')).livraison;\n                  let user = JSON.parse(localStorage.getItem('user'));\n                  let produits = localStorage.getItem('panier');\n                  var obj = JSON.parse(produits);\n                  let t = [];\n\n                  if (produits != null || produits != undefined) {\n                    for (var i in obj) {\n                      console.log(obj[i]);\n                      t.push(obj[i].id);\n                    }\n                  }\n\n                  console.log('ttttttttttttttttttttttttttttt', t);\n                  const csrftoken = r.csrfToken;\n                  let data = await fetch(url2, {\n                    method: 'POST',\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-CSRFToken': csrftoken\n                    },\n                    credentials: 'include',\n                    body: JSON.stringify({\n                      'login': false,\n                      'sexe': user.sexe,\n                      'prenom': user.prenom,\n                      'nom': user.nom,\n                      'email': user.email,\n                      'adresse': user.adresse,\n                      'ville': user.ville,\n                      'pays': user.pays,\n                      'cp': user.cp,\n                      'telephone': user.telephone,\n                      'livraison': livraison,\n                      'produits': t\n                    })\n                  }).then(response => {\n                    if (response.ok) {\n                      console.log(\"fetchLogin\", response);\n                      return response.json();\n                    } else {\n                      console.log(response, 'Mauvaise réponse du réseau');\n                    }\n                  }).then(data => {\n                    console.log(\"reponse\", data);\n                  }).catch(function (error) {\n                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n                  });\n                  navigate('/');\n                  props.setModalcontent( /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-column justify-content-center align-items-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      className: \"modline\",\n                      children: [\"Merci, \", user.prenom, \", pour votre commande !\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 755,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"modline\",\n                      children: \"Votre commande a \\xE9t\\xE9 r\\xE9alis\\xE9 avec succ\\xE9s, nous venons de vous envoyer un email avec le detail de vos achats.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 756,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"modline\",\n                      children: \"Nous vous contacterons par email pour vous fournir les informations relative \\xE0 votre commande.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 757,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      className: \"modline\",\n                      src: payment,\n                      alt: \"\",\n                      style: {\n                        maxWidth: '400px',\n                        objectFit: 'contain'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 758,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 754,\n                    columnNumber: 41\n                  }, this));\n                  gsap.from(\".modline\", {\n                    opacity: 0,\n                    scale: 0,\n                    duration: 0.4,\n                    stagger: 0.4,\n                    delay: 0.5\n                  });\n                  localStorage.removeItem('panier');\n                  localStorage.removeItem('livraison');\n                  localStorage.removeItem('user');\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 21\n        }, this));\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"produitBuyBtn\",\n      children: \"Payement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 9\n  }, this);\n\n  const [stepBarreBtn, setStepBarreBtn] = useState(btnPanier);\n  const [panierStep, setPanierStep] = useState( /*#__PURE__*/_jsxDEV(Panier, {\n    showHideModal: props.showHideModal,\n    modalContent: props.modalContent,\n    setModalcontent: props.setModalcontent,\n    user: u,\n    button: btnPanier,\n    setStepBarreBtn: setStepBarreBtn\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 778,\n    columnNumber: 49\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main w-100\",\n      children: [/*#__PURE__*/_jsxDEV(Stepbarre, {\n        setPanierStep: setPanierStep,\n        setStepBarreBtn: setStepBarreBtn,\n        btnChoixLivraison: btnChoixLivraison,\n        toPanier: goToPanier,\n        toLivraison: goToLivraison,\n        toChoixLivraison: goToChoixLivraison,\n        toCommandeRecap: goToRecap,\n        button: stepBarreBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-100 justify-content-center\",\n        children: panierStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Panierprocess, \"nHO8/GAulFEcHF5YxOdcpNNvugA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Panierprocess;\nexport default Panierprocess;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panierprocess\");","map":{"version":3,"sources":["C:/Users/Nourou/Documents/Developpement WEB/CamSecurite-django-react/frontend/src/pages/PanierProcess.js"],"names":["React","useState","useEffect","payment","gsap","Outlet","Link","useNavigate","Choixlivraison","Commanderecap","Livraison","Panier","Stepbarre","$","Payementchoix","PayPalScriptProvider","PayPalButtons","Panierprocess","props","navigate","panierItems","setPanieritems","sousTotal","setSoustotal","total","setTotal","livraison","setLivraison","panier","setPanier","u","setU","getCSRF","url2","r","fetch","credentials","then","response","ok","console","log","json","catch","error","message","window","scrollTop","uss","t","url","csrftoken","csrfToken","data","headers","user","id","data2","length","setPanierStep","setStepBarreBtn","localStorage","getItem","undefined","goToPanier","btnPanier","goToLivraison","btnLivraison","addClass","removeClass","setTimeout","goToChoixLivraison","inputs","Object","i","value","name","inputsForm","JSON","stringify","us","method","body","setItem","btnChoixLivraison","goToRecap","btnPayer","showHideModal","modalContent","setModalcontent","initialOptions","currency","e","p","maxWidth","width","layout","color","Tagline","actions","order","create","purchase_units","amount","String","totalaveclivraison","datas","first_name","objectFit","from","opacity","scale","duration","stagger","delay","parse","produits","obj","push","sexe","prenom","nom","email","adresse","ville","pays","cp","telephone","removeItem","st","d","prix","livid","url_liv","dataliv","stepBarreBtn","panierStep"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport payment from './assets/img/payment.gif'\r\nimport { gsap } from \"gsap\";\r\nimport { Outlet, Link, useNavigate } from 'react-router-dom';\r\nimport Choixlivraison from './components/ChoixLivraison';\r\nimport Commanderecap from './components/CommandeRecap';\r\nimport Livraison from './components/Livraison';\r\nimport Panier from './components/Panier';\r\nimport Stepbarre from './components/StepBarre';\r\nimport $ from 'jquery';\r\nimport Payementchoix from './components/PayementChoix';\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\n\r\nconst Panierprocess = (props) => {\r\n    let navigate = useNavigate();\r\n    const [panierItems, setPanieritems] = useState([''])\r\n    const [sousTotal,setSoustotal] = useState('')\r\n    const [total,setTotal] = useState('')\r\n    const [livraison,setLivraison] = useState(null)\r\n    const [panier,setPanier] = useState('')\r\n    const [u,setU] = useState('')\r\n    const getCSRF = async () => {\r\n    var url2 = \"http://localhost:8000/csrf/\"\r\n    let r = '' \r\n    await fetch(url2, {\r\n        credentials: 'include',\r\n      }).then(response => {\r\n        if(response.ok) {\r\n            console.log(\"fetchCSRF panier process\")\r\n            r = response.json();\r\n        } else {\r\n            console.log(response,'Mauvaise réponse du réseau');\r\n        }\r\n        })\r\n        .catch(function(error) {\r\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n        });\r\n    return r\r\n    }\r\n\r\n    console.log('props ppp produit',props)\r\n    useEffect(async () => {\r\n        $(window).scrollTop(0);\r\n        let uss = \"\"\r\n        let t = async () => {\r\n            var url = \"http://localhost:8000/current_user/?format=json\"\r\n            let r = await getCSRF()\r\n            const csrftoken = r.csrfToken\r\n            let data = await fetch(url,{                \r\n              headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'X-CSRFToken': csrftoken\r\n            }, \r\n            credentials: 'include',\r\n            }).then(response => {\r\n            if(response.ok) {\r\n                console.log(\"current_user de panier process\",response)\r\n                return response.json();\r\n            } else {\r\n                console.log(response,'Mauvaise réponse du réseau');\r\n            }\r\n            }).then(data => \r\n                {\r\n                  return(data)\r\n                }\r\n                )\r\n            .catch(function(error) {\r\n              console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n            });\r\n            setU(data)\r\n            uss=data\r\n          }\r\n          await t()\r\n          if(uss!=\"\"){\r\n              var url2 = `http://localhost:8000/panier/${uss.user.id}/`\r\n    \r\n              let data2 = await fetch(url2).then(response => {\r\n              if(response.ok) {\r\n                  console.log(\"fetch panier panier process\")\r\n                  return response.json();\r\n              } else {\r\n                  console.log(response,'Mauvaise réponse du réseau');\r\n              }\r\n              }).then(data => \r\n                  {return data}\r\n                  )\r\n              .catch(function(error) {\r\n              console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n              });\r\n              setPanieritems(data2)\r\n              if(data2.length==0){\r\n                  setPanierStep(<Panier user={u} button={''}/>)\r\n                  setStepBarreBtn(\"\")\r\n                }\r\n                setPanier(data2[0].panier)\r\n              console.log(\"ddata1151\",data2)\r\n          }\r\n          else{\r\n              if(localStorage.getItem('panier')==null || localStorage.getItem('panier')==undefined || localStorage.getItem('panier')==\"\" ){\r\n                setPanierStep(<Panier user={u} button={''}/>)\r\n                setStepBarreBtn(\"\")\r\n              }\r\n          }\r\n        return () => {\r\n        };\r\n    }, [u.id]);\r\n\r\n    console.log(\"ppppppppppppppppppaaaaaannn1254\",panierItems)\r\n\r\n\r\n    const goToPanier = () => {\r\n        setPanierStep(<Panier user={u} button={ btnPanier }/>)\r\n        setStepBarreBtn(btnPanier)\r\n    }\r\n    const goToLivraison = () => {\r\n        setPanierStep(<Livraison button={ btnLivraison }/>)\r\n        setStepBarreBtn(btnLivraison)\r\n        $(\"#stepPanier\").addClass('stepValide')\r\n        $(\"#panierToLivraison\").addClass(\"stepStateActive\")\r\n        $(\"#stepPanier\").removeClass(\"stepActive\")\r\n        setTimeout(() => $(\"#stepLivraison\").addClass('stepActive'),1000)\r\n    }\r\n    const goToChoixLivraison = async () => {\r\n        let inputs = new Object()\r\n        for(let i=0;i<$(\".inputform\").length;i++){\r\n            if($(\".inputform\")[i].value==\"\")\r\n                return \"champs manquants\"\r\n            inputs[$(\".inputform\")[i].name] = $(\".inputform\")[i].value\r\n        }\r\n        var inputsForm = JSON.stringify(inputs);\r\n        console.log('entrer:::::',inputsForm)\r\n        let r = await getCSRF()\r\n        console.log(\"csrftoken OK\",r.csrfToken)\r\n        let csrftoken = r.csrfToken\r\n        let us =''\r\n        let t = async () => {\r\n            var url = \"http://localhost:8000/current_user/?format=json\"\r\n            let r = await getCSRF()\r\n            const csrftoken = r.csrfToken\r\n            let data = await fetch(url,{                \r\n              headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'X-CSRFToken': csrftoken\r\n            }, \r\n            credentials: 'include',\r\n            }).then(response => {\r\n            if(response.ok) {\r\n                console.log(\"current_user de panier process\",response)\r\n                return response.json();\r\n            } else {\r\n                console.log(response,'Mauvaise réponse du réseau');\r\n            }\r\n            }).then(data => \r\n                {\r\n                  return(data)\r\n                }\r\n                )\r\n            .catch(function(error) {\r\n              console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n            });\r\n            us=data\r\n        }\r\n        await t()\r\n\r\n        if(us!='rien trouvé'){\r\n\r\n        var url2 = \"http://localhost:8000/users/\"+us.id+\"/\"\r\n\r\n        await fetch(url2,{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'X-CSRFToken': csrftoken\r\n                    }, \r\n                    credentials: 'include',\r\n                    body: inputsForm\r\n                }).then(response => {\r\n            if(response.ok) {\r\n                console.log(\"fetchLogin\",response)\r\n                return response.json();\r\n            } else {\r\n                console.log(response,'Mauvaise réponse du réseau');\r\n            }\r\n            }).then(data => \r\n                {\r\n                    console.log(\"reponse\",data)\r\n                }\r\n                )\r\n            .catch(function(error) {\r\n            console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n            });\r\n        }\r\n        else{\r\n            localStorage.setItem('user',inputsForm)\r\n            console.log('user coooooooookie' , localStorage.getItem('user'))\r\n        }\r\n\r\n        setPanierStep(<Choixlivraison button={ btnChoixLivraison }/>)\r\n        setStepBarreBtn(btnChoixLivraison)\r\n        $(\"#stepLivraison\").addClass('stepValide')\r\n        $(\"#livraisonToChoixLivraison\").addClass(\"stepStateActive\")\r\n        $(\"#stepLivraison\").removeClass(\"stepActive\")\r\n        setTimeout(() => $(\"#stepChoixLivraison\").addClass('stepActive'),1000)\r\n    }\r\n    const goToRecap = async () => {\r\n        let inputs = new Object()\r\n        console.log('le choix de la livraison:',$(\".livChoixActive\")[0])\r\n        inputs[\"livraison\"] = $(\".livChoixActive\")[0].id\r\n        var inputsForm = JSON.stringify(inputs);\r\n        console.log('entrer:::::',inputsForm)\r\n        let r = await getCSRF()\r\n        console.log(\"csrftoken OK\",r.csrfToken)\r\n        let csrftoken = r.csrfToken\r\n        let t = async () => {\r\n            var url = \"http://localhost:8000/current_user/?format=json\"\r\n            let r = await getCSRF()\r\n            const csrftoken = r.csrfToken\r\n            let data = await fetch(url,{                \r\n              headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'X-CSRFToken': csrftoken\r\n            }, \r\n            credentials: 'include',\r\n            }).then(response => {\r\n            if(response.ok) {\r\n                console.log(\"current_user de panier process\",response)\r\n                return response.json();\r\n            } else {\r\n                console.log(response,'Mauvaise réponse du réseau');\r\n            }\r\n            }).then(data => \r\n                {\r\n                  return(data)\r\n                }\r\n                )\r\n            .catch(function(error) {\r\n              console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n            });\r\n            return data\r\n          }\r\n          let us = await t()\r\n          \r\n          if(us!='rien trouvé'){\r\n            var url2 = \"http://localhost:8000/choix-livraison/\"+us.id+\"/\"\r\n\r\n            await fetch(url2,{\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'X-CSRFToken': csrftoken\r\n                      }, \r\n                      credentials: 'include',\r\n                      body: inputsForm\r\n                  }).then(response => {\r\n                if(response.ok) {\r\n                    console.log(\"fetchLogin\",response)\r\n                    return response.json();\r\n                } else {\r\n                    console.log(response,'Mauvaise réponse du réseau');\r\n                }\r\n                }).then(data => \r\n                    {\r\n                        console.log(\"reponse\",data)\r\n                    }\r\n                    )\r\n                .catch(function(error) {\r\n                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                });\r\n          }\r\n          else{\r\n            localStorage.setItem('livraison',inputsForm)\r\n            console.log('livraison coooooooookie' , localStorage.getItem('livraison'))\r\n          }\r\n\r\n        setPanierStep(<Commanderecap setStepBarreBtn={setStepBarreBtn}  button={ btnPayer } showHideModal={props.showHideModal} modalContent={props.modalContent} setModalcontent={props.setModalcontent}/>)\r\n        setStepBarreBtn(btnPayer)\r\n        $(\"#stepChoixLivraison\").addClass('stepValide')\r\n        $(\"#choixLivraisonToRecapCommande\").addClass(\"stepStateActive\")\r\n        $(\"#stepChoixLivraison\").removeClass(\"stepActive\")\r\n        setTimeout(() => $(\"#stepRecapCommande\").addClass('stepActive'),1000)\r\n    }\r\n    const btnPanier = (\r\n        <div className=\"w-100 d-flex align-items-center justify-content-center\">\r\n            {\r\n                panierItems!=undefined\r\n                ?\r\n                    panierItems.length==0\r\n                    ?\r\n                    <button className=\"produitBuyBtn\" disabled onClick={() => goToLivraison()}>Valider mon panier</button>\r\n                    :\r\n                    <button className=\"produitBuyBtn\"  onClick={() => goToLivraison()}>Valider mon panier</button>\r\n                :\r\n                <button className=\"produitBuyBtn\"  onClick={() => goToLivraison()}>Valider mon panier</button>\r\n            }\r\n        </div>\r\n    )\r\n    const btnLivraison = (\r\n        <div className=\"w-100 d-flex align-items-center justify-content-center\">\r\n            <button className=\"produitBuyBtn\" onClick={() => goToChoixLivraison()} >Confirmer les informations</button>\r\n        </div>\r\n    )\r\n    const btnChoixLivraison = (\r\n        <div className=\"w-100 d-flex align-items-center justify-content-center\">\r\n            <button className=\"produitBuyBtn\" onClick={() => goToRecap()} >Choisir ce mode de livraison</button>\r\n        </div>\r\n    )\r\n    const initialOptions = {\r\n        \"client-id\": \"ASFEAZSj8J9EWXzFzTRIqT9Frn3FONIEgXx87hRWxhJyCSv7_SshAkT1TW0OSjTySDAb4cEXdVW7olO3\",\r\n        currency: \"EUR\",\r\n    };\r\n    const btnPayer = (\r\n        <div className=\"w-100 d-flex align-items-center justify-content-center\" onClick={async (e) => {     \r\n            let t = async () => {\r\n                var url = \"http://localhost:8000/current_user/?format=json\"\r\n                let r = await getCSRF()\r\n                const csrftoken = r.csrfToken\r\n                let data = await fetch(url,{                \r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFToken': csrftoken\r\n                }, \r\n                credentials: 'include',\r\n                }).then(response => {\r\n                if(response.ok) {\r\n                    console.log(\"current_user de panier process\",response)\r\n                    return response.json();\r\n                } else {\r\n                    console.log(response,'Mauvaise réponse du réseau');\r\n                }\r\n                }).then(data => \r\n                    {\r\n                    return(data)\r\n                    }\r\n                    )\r\n                .catch(function(error) {\r\n                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                });\r\n                setU(data)\r\n                return(data)\r\n            }\r\n            let us = await t()\r\n            console.log(\"########################\",us)\r\n            let p =\"\"\r\n            if(us!='rien trouvé'){\r\n                var url2 = `http://localhost:8000/panier/${us.user.id}/`\r\n        \r\n                let data2 = await fetch(url2).then(response => {\r\n                if(response.ok) {\r\n                    console.log(\"fetch panier panier process\")\r\n                    return response.json();\r\n                } else {\r\n                    console.log(response,'Mauvaise réponse du réseau');\r\n                }\r\n                }).then(data => \r\n                    {return data}\r\n                    )\r\n                .catch(function(error) {\r\n                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                });\r\n                p = data2[0].panier\r\n                console.log(\"ddata1151******************\",data2[0].panier)\r\n                props.showHideModal(e,\r\n                    <div className='d-flex justify-content-center' style={{maxWidth:'400px',width:'100vh'}}>\r\n                    <PayPalScriptProvider options={initialOptions}>\r\n                        <PayPalButtons \r\n                            style={\r\n                                { \r\n                                    layout: \"vertical\", \r\n                                    color: 'black',\r\n                                    width: \"100%\",   \r\n                                    Tagline: false \r\n                                }\r\n                            }\r\n                            createOrder={(data, actions) => {\r\n                                \r\n                                return actions.order.create({\r\n                                    purchase_units: [\r\n                                        {\r\n                                            amount: {\r\n                                                value: String(data2[0].panier.totalaveclivraison),\r\n                                            },\r\n                                        },\r\n                                    ],\r\n                                });\r\n                            }}\r\n                        onApprove={async (datas, actions) => {\r\n                            let t = async () => {\r\n                                var url = \"http://localhost:8000/current_user/?format=json\"\r\n                                let r = await getCSRF()\r\n                                const csrftoken = r.csrfToken\r\n                                let data = await fetch(url,{                \r\n                                headers: {\r\n                                'Accept': 'application/json',\r\n                                'Content-Type': 'application/json',\r\n                                'X-CSRFToken': csrftoken\r\n                                }, \r\n                                credentials: 'include',\r\n                                }).then(response => {\r\n                                if(response.ok) {\r\n                                    console.log(\"current_user de panier process\",response)\r\n                                    return response.json();\r\n                                } else {\r\n                                    console.log(response,'Mauvaise réponse du réseau');\r\n                                }\r\n                                }).then(data => \r\n                                    {\r\n                                    return(data)\r\n                                    }\r\n                                    )\r\n                                .catch(function(error) {\r\n                                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                                });\r\n                                setU(data)\r\n                                return(data)\r\n                            }\r\n                            let us = await t()\r\n                            if(us != 'rien trouvé'){\r\n                                var url2 = \"http://localhost:8000/commande-success/\"\r\n                                let r = await getCSRF()\r\n                                const csrftoken = r.csrfToken\r\n                                let data = await fetch(url2,{\r\n                                        method: 'POST',\r\n                                        headers: {\r\n                                            'Accept': 'application/json',\r\n                                            'Content-Type': 'application/json',\r\n                                            'X-CSRFToken': csrftoken\r\n                                        }, \r\n                                        credentials: 'include',\r\n                                        body: JSON.stringify({'login':true,'id':us.user.id})\r\n                                    }).then(response => {\r\n                                    if(response.ok) {\r\n                                        console.log(\"fetchLogin\",response)\r\n                                        return response.json();\r\n                                    } else {\r\n                                        console.log(response,'Mauvaise réponse du réseau');\r\n                                    }\r\n                                    }).then(data => \r\n                                        {\r\n                                            console.log(\"reponse\",data)\r\n                                        }\r\n                                        )\r\n                                    .catch(function(error) {\r\n                                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                                    });\r\n                                    navigate('/')\r\n                                    props.setModalcontent(\r\n                                    <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                        <h3 className='modline'>Merci, {us.user.first_name}, pour votre commande !</h3>\r\n                                        <p className='modline'>Votre commande a été réalisé avec succés, nous venons de vous envoyer un email avec le detail de vos achats.</p>\r\n                                        <p className=\"modline\">Nous vous contacterons par email pour vous fournir les informations relative à votre commande.</p>\r\n                                        <img className='modline' src={payment} alt=\"\" style={{maxWidth:'400px',objectFit:'contain',}} />\r\n                                        \r\n                                    </div>)\r\n                                    gsap.from(\".modline\",{opacity: 0, scale: 0, duration: 0.4, stagger: 0.4, delay:0.5})\r\n                            }\r\n                            else{\r\n                                var url2 = \"http://localhost:8000/commande-success/\"\r\n                                let r = await getCSRF()\r\n                                let user = JSON.parse(localStorage.getItem('user'))\r\n                                let produits = localStorage.getItem('panier')\r\n                                var obj = JSON.parse(produits);\r\n                                let t = []\r\n                                if(produits!=null || produits!=undefined){\r\n                                    for(var i in obj){\r\n                                        console.log(obj[i]);\r\n                                        t.push(obj[i].id)                    \r\n                                    }\r\n                \r\n                                }\r\n                                console.log('ttttttttttttttttttttttttttttt',t)\r\n                                const csrftoken = r.csrfToken\r\n                                let data = await fetch(url2,{\r\n                                        method: 'POST',\r\n                                        headers: {\r\n                                            'Accept': 'application/json',\r\n                                            'Content-Type': 'application/json',\r\n                                            'X-CSRFToken': csrftoken\r\n                                        }, \r\n                                        credentials: 'include',\r\n                                        body: JSON.stringify({\r\n                                            'login': false,\r\n                                            'sexe': user.sexe,\r\n                                            'prenom': user.prenom,\r\n                                            'nom': user.nom,\r\n                                            'email': user.email,\r\n                                            'adresse':user.adresse,\r\n                                            'ville':user.ville,\r\n                                            'pays':user.pays,\r\n                                            'cp':user.cp,\r\n                                            'telephone':user.telephone,\r\n                                            'livraison':livraison,\r\n                                            'produits': t\r\n\r\n                                        })\r\n                                    }).then(response => {\r\n                                    if(response.ok) {\r\n                                        console.log(\"fetchLogin\",response)\r\n                                        return response.json();\r\n                                    } else {\r\n                                        console.log(response,'Mauvaise réponse du réseau');\r\n                                    }\r\n                                    }).then(data => \r\n                                        {\r\n                                            console.log(\"reponse\",data)\r\n                                        }\r\n                                        )\r\n                                    .catch(function(error) {\r\n                                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                                    });\r\n                                    navigate('/')\r\n                                    props.setModalcontent(\r\n                                    <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                        <h3 className='modline'>Merci, {user.prenom}, pour votre commande !</h3>\r\n                                        <p className='modline'>Votre commande a été réalisé avec succés, nous venons de vous envoyer un email avec le detail de vos achats.</p>\r\n                                        <p className=\"modline\">Nous vous contacterons par email pour vous fournir les informations relative à votre commande.</p>\r\n                                        <img className='modline' src={payment} alt=\"\" style={{maxWidth:'400px',objectFit:'contain',}} />\r\n                                    </div>)\r\n                                    gsap.from(\".modline\",{opacity: 0, scale: 0, duration: 0.4, stagger: 0.4, delay:0.5})\r\n                                    localStorage.removeItem('panier')\r\n                                    localStorage.removeItem('livraison')\r\n                                    localStorage.removeItem('user')\r\n                            }\r\n                            \r\n                        }} />\r\n                    </PayPalScriptProvider>\r\n                    </div>\r\n                \r\n                )\r\n            }\r\n            else{\r\n                 \r\n                var url = `http://localhost:8000/panier/0/`\r\n                let produits = localStorage.getItem('panier')\r\n                var obj = JSON.parse(produits);\r\n                console.log(obj)\r\n                let inputsForm = new Object\r\n                let t = []\r\n                if(produits!=null || produits!=undefined){\r\n                    for(var i in obj){\r\n                        console.log(obj[i]);\r\n                        t.push(obj[i].id)                    \r\n                    }\r\n    \r\n                }\r\n                console.log('ttttttttttttttttttttttttttttt',t)\r\n                inputsForm['id']=t\r\n                console.log(inputsForm)\r\n                inputsForm = JSON.stringify(inputsForm)\r\n                let data = await fetch(url,{\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                      },\r\n                      body: inputsForm\r\n                  }).then(response => {\r\n                if(response.ok) {\r\n                    console.log(\"fetch\")\r\n                    return response.json();\r\n                } else {\r\n                    console.log(response,'Mauvaise réponse du réseau');\r\n                }\r\n                }).then(data => \r\n                    {return data}\r\n                    )\r\n                .catch(function(error) {\r\n                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                });\r\n                setPanier(data)\r\n                let st = 0\r\n                for(let d=0; d<data.length;d++)\r\n                    st = st + data[d].prix\r\n                console.log('stststststststststststststststst',st)\r\n                setSoustotal(st)\r\n                let livid = localStorage.getItem('livraison')\r\n                livid = JSON.parse(livid).livraison\r\n                console.log('lllllllllllllllllllllll',livid)\r\n                let url_liv = `http://localhost:8000/choix-livraison-nolog/${livid}/`\r\n                let dataliv = await fetch(url_liv).then(\r\n                    r => {\r\n                        if(r.ok) {\r\n                            console.log(\"fetchLivraison\")\r\n                            return r.json();\r\n                        } else {\r\n                            console.log(r,'Mauvaise réponse du réseau');\r\n                        }\r\n                    }).then(\r\n                        data => {\r\n                            return data\r\n                        }).catch(function(error) {\r\n                            console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                        });\r\n                console.log('zevjmobevuebuvebveuv51333333333333333333',dataliv)\r\n                setLivraison(dataliv)\r\n                setTotal(st+dataliv.prix)\r\n                props.showHideModal(e,\r\n                    <div style={{maxWidth:'400px',width:'100vh'}}>\r\n                    <PayPalScriptProvider options={initialOptions}>\r\n                        <PayPalButtons \r\n                            style={\r\n                                { \r\n                                    layout: \"vertical\", \r\n                                    color: 'black',\r\n                                    width: \"500px\",   \r\n                                    Tagline: false \r\n                                }\r\n                            }\r\n                            createOrder={(data, actions) => {\r\n                                \r\n                                return actions.order.create({\r\n                                    purchase_units: [\r\n                                        {\r\n                                            amount: {\r\n                                                value: st+dataliv.prix,\r\n                                            },\r\n                                        },\r\n                                    ],\r\n                                });\r\n                            }}\r\n                            onApprove={async (datas, actions) => {\r\n                                let t = async () => {\r\n                                    var url = \"http://localhost:8000/current_user/?format=json\"\r\n                                    let r = await getCSRF()\r\n                                    const csrftoken = r.csrfToken\r\n                                    let data = await fetch(url,{                \r\n                                    headers: {\r\n                                    'Accept': 'application/json',\r\n                                    'Content-Type': 'application/json',\r\n                                    'X-CSRFToken': csrftoken\r\n                                    }, \r\n                                    credentials: 'include',\r\n                                    }).then(response => {\r\n                                    if(response.ok) {\r\n                                        console.log(\"current_user de panier process\",response)\r\n                                        return response.json();\r\n                                    } else {\r\n                                        console.log(response,'Mauvaise réponse du réseau');\r\n                                    }\r\n                                    }).then(data => \r\n                                        {\r\n                                        return(data)\r\n                                        }\r\n                                        )\r\n                                    .catch(function(error) {\r\n                                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                                    });\r\n                                    setU(data)\r\n                                    return(data)\r\n                                }\r\n                                let us = await t()\r\n                                if(us != 'rien trouvé'){\r\n                                    var url2 = \"http://localhost:8000/commande-success/\"\r\n                                    let r = await getCSRF()\r\n                                    const csrftoken = r.csrfToken\r\n                                    let data = await fetch(url2,{\r\n                                            method: 'POST',\r\n                                            headers: {\r\n                                                'Accept': 'application/json',\r\n                                                'Content-Type': 'application/json',\r\n                                                'X-CSRFToken': csrftoken\r\n                                            }, \r\n                                            credentials: 'include',\r\n                                            body: JSON.stringify({'login':true,'id':us.user.id})\r\n                                        }).then(response => {\r\n                                        if(response.ok) {\r\n                                            console.log(\"fetchLogin\",response)\r\n                                            return response.json();\r\n                                        } else {\r\n                                            console.log(response,'Mauvaise réponse du réseau');\r\n                                        }\r\n                                        }).then(data => \r\n                                            {\r\n                                                console.log(\"reponse\",data)\r\n                                            }\r\n                                            )\r\n                                        .catch(function(error) {\r\n                                        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                                        });\r\n                                        navigate('/')\r\n                                        props.setModalcontent(\r\n                                        <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                            <h3 className='modline'>Merci, {us.user.first_name}, pour votre commande !</h3>\r\n                                            <p className='modline'>Votre commande a été réalisé avec succés, nous venons de vous envoyer un email avec le detail de vos achats.</p>\r\n                                            <p className=\"modline\">Nous vous contacterons par email pour vous fournir les informations relative à votre commande.</p>\r\n                                            <img className='modline' src={payment} alt=\"\" style={{maxWidth:'400px',objectFit:'contain',}} />\r\n                                            \r\n                                        </div>)\r\n                                        gsap.from(\".modline\",{opacity: 0, scale: 0, duration: 0.4, stagger: 0.4, delay:0.5})\r\n                                }\r\n                                else{\r\n                                    var url2 = \"http://localhost:8000/commande-success/\"\r\n                                    let r = await getCSRF()\r\n                                    let livraison = JSON.parse(localStorage.getItem('livraison')).livraison\r\n                                    let user = JSON.parse(localStorage.getItem('user'))\r\n                                    let produits = localStorage.getItem('panier')\r\n                                    var obj = JSON.parse(produits);\r\n                                    let t = []\r\n                                    if(produits!=null || produits!=undefined){\r\n                                        for(var i in obj){\r\n                                            console.log(obj[i]);\r\n                                            t.push(obj[i].id)                    \r\n                                        }\r\n                    \r\n                                    }\r\n                                    console.log('ttttttttttttttttttttttttttttt',t)\r\n                                    const csrftoken = r.csrfToken\r\n                                    let data = await fetch(url2,{\r\n                                            method: 'POST',\r\n                                            headers: {\r\n                                                'Accept': 'application/json',\r\n                                                'Content-Type': 'application/json',\r\n                                                'X-CSRFToken': csrftoken\r\n                                            }, \r\n                                            credentials: 'include',\r\n                                            body: JSON.stringify({\r\n                                                'login': false,\r\n                                                'sexe': user.sexe,\r\n                                                'prenom': user.prenom,\r\n                                                'nom': user.nom,\r\n                                                'email': user.email,\r\n                                                'adresse':user.adresse,\r\n                                                'ville':user.ville,\r\n                                                'pays':user.pays,\r\n                                                'cp':user.cp,\r\n                                                'telephone':user.telephone,\r\n                                                'livraison':livraison,\r\n                                                'produits': t\r\n    \r\n                                            })\r\n                                        }).then(response => {\r\n                                        if(response.ok) {\r\n                                            console.log(\"fetchLogin\",response)\r\n                                            return response.json();\r\n                                        } else {\r\n                                            console.log(response,'Mauvaise réponse du réseau');\r\n                                        }\r\n                                        }).then(data => \r\n                                            {\r\n                                                console.log(\"reponse\",data)\r\n                                            }\r\n                                            )\r\n                                        .catch(function(error) {\r\n                                        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                                        });\r\n                                        navigate('/')\r\n                                        props.setModalcontent(\r\n                                        <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                            <h3 className='modline'>Merci, {user.prenom}, pour votre commande !</h3>\r\n                                            <p className='modline'>Votre commande a été réalisé avec succés, nous venons de vous envoyer un email avec le detail de vos achats.</p>\r\n                                            <p className=\"modline\">Nous vous contacterons par email pour vous fournir les informations relative à votre commande.</p>\r\n                                            <img className='modline' src={payment} alt=\"\" style={{maxWidth:'400px',objectFit:'contain',}} />\r\n                                        </div>)\r\n                                        gsap.from(\".modline\",{opacity: 0, scale: 0, duration: 0.4, stagger: 0.4, delay:0.5})\r\n                                        localStorage.removeItem('panier')\r\n                                        localStorage.removeItem('livraison')\r\n                                        localStorage.removeItem('user')\r\n                                }\r\n                                \r\n                            }} />\r\n                    </PayPalScriptProvider>\r\n                    </div>\r\n                \r\n                )\r\n\r\n            }\r\n            }}>\r\n            <button className=\"produitBuyBtn\">Payement</button>\r\n        </div>\r\n    )\r\n    const [stepBarreBtn,setStepBarreBtn] = useState(btnPanier)\r\n    const [panierStep,setPanierStep] = useState(<Panier showHideModal={props.showHideModal} modalContent={props.modalContent} setModalcontent={props.setModalcontent} user={u} button={btnPanier} setStepBarreBtn={setStepBarreBtn} />)\r\n    return (\r\n        <>   \r\n        <div className=\"main w-100\">            \r\n          <Stepbarre setPanierStep={setPanierStep} setStepBarreBtn={setStepBarreBtn} btnChoixLivraison={btnChoixLivraison}  toPanier={goToPanier} toLivraison={goToLivraison} toChoixLivraison={goToChoixLivraison} toCommandeRecap={goToRecap}  button={stepBarreBtn}/>\r\n          <div className=\"w-100 justify-content-center\">\r\n          {panierStep}\r\n          </div>\r\n        </div> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Panierprocess;\r\n"]},"metadata":{},"sourceType":"module"}