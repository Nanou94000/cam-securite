{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nourou\\\\Documents\\\\Developpement WEB\\\\CamSecurite-django-react\\\\frontend\\\\src\\\\pages\\\\components\\\\PasswordForgot.js\";\nimport React from 'react';\nimport Loginform from './LoginForm';\nimport left from \"../assets/icon/left.png\";\nimport key from \"../assets/img/key.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Passwordforgot = props => {\n  const ask_for_new_password = async e => {\n    e.preventDefault();\n    let email = $('#in3')[0].value;\n    const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (email == \" \") {\n      setError('Veuillez indiquer une adresse email');\n      return 'email erreur';\n    }\n\n    if (!regex.test(email)) {\n      setError(\"Format de l'email incorrect\");\n      return 'email erreur';\n    }\n\n    let inputs = new Object();\n\n    for (let i = 0; i < $(\".inputform\").length; i++) inputs[$(\".inputform\")[i].name] = $(\".inputform\")[i].value;\n\n    var inputsForm = JSON.stringify(inputs);\n    let r = await getCSRF();\n    await setCsrftoken(r.csrfToken);\n    localStorage.setItem('csrftoken', r.csrfToken);\n    console.log(\"csrftoken OK2\", csrftoken);\n    var url2 = \"http://localhost:8000/ask-reset-mdp/\";\n    let data = await fetch(url2, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-CSRFToken': r.csrfToken\n      },\n      credentials: 'include',\n      body: inputsForm\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"fetchLogin\", response);\n        return response.json();\n      } else {\n        console.log(response, 'Mauvaise réponse du réseau');\n      }\n    }).then(data => {\n      console.log(\"reponse\", data);\n    }).catch(function (error) {\n      console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n    });\n    props.setModalcontent( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-column justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Merci pour votre inscription, nous venons de vous envoyer un mail afin d'activer votre compte !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Pensez a v\\xE9rifier vos spam, et pour tout autre probl\\xE8me ou questionnement, contacter nous sur contact.cam.securite@gmail.com ou via notre formulaire de contact sur cam-securite.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Bonne journ\\xE9e de la par de l'\\xE9quipe de Cam Securite !\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: register,\n        alt: \"\",\n        style: {\n          maxWidth: '400px',\n          objectFit: 'contain'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex flex-column align-items-center justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: key,\n      alt: \"\",\n      className: \"iconXL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center fs-4\",\n      children: \"Mot de passe oubli\\xE9 ?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-center fs-6 mt-1 text-grey\",\n      children: \"Nous vous enverrons un mail avec les instructions pour r\\xE9initialiser votre mot de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formrow w-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"in1\",\n        type: \"email\",\n        name: \"email\",\n        className: \"inputform w-100\",\n        placeholder: \" \",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"in1\",\n        className: \"labelform\",\n        children: \"Email*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"formbtn\",\n      children: \"R\\xE9initialiser le mot de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"pointer text-grey mt-2 d-flex align-items-center link\",\n      onClick: () => props.setModalcontent( /*#__PURE__*/_jsxDEV(Loginform, {\n        setModalcontent: props.setModalcontent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 123\n      }, this)),\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: left,\n        alt: \"\",\n        className: \"iconS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), \"Retour \\xE0 la page de connexion\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Passwordforgot;\nexport default Passwordforgot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Passwordforgot\");","map":{"version":3,"sources":["C:/Users/Nourou/Documents/Developpement WEB/CamSecurite-django-react/frontend/src/pages/components/PasswordForgot.js"],"names":["React","Loginform","left","key","Passwordforgot","props","ask_for_new_password","e","preventDefault","email","$","value","regex","setError","test","inputs","Object","i","length","name","inputsForm","JSON","stringify","r","getCSRF","setCsrftoken","csrfToken","localStorage","setItem","console","log","csrftoken","url2","data","fetch","method","headers","credentials","body","then","response","ok","json","catch","error","message","setModalcontent","register","maxWidth","objectFit"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAE9B,QAAMC,oBAAoB,GAAG,MAAOC,CAAP,IAAa;AACtCA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,KAAK,GAAGC,CAAC,CAAC,MAAD,CAAD,CAAU,CAAV,EAAaC,KAAzB;AACA,UAAMC,KAAK,GAAG,sHAAd;;AACA,QAAGH,KAAK,IAAE,GAAV,EAAc;AACZI,MAAAA,QAAQ,CAAC,qCAAD,CAAR;AACA,aAAQ,cAAR;AACD;;AACD,QAAG,CAACD,KAAK,CAACE,IAAN,CAAWL,KAAX,CAAJ,EAAsB;AACpBI,MAAAA,QAAQ,CAAC,6BAAD,CAAR;AACA,aAAQ,cAAR;AACD;;AACD,QAAIE,MAAM,GAAG,IAAIC,MAAJ,EAAb;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACP,CAAC,CAAC,YAAD,CAAD,CAAgBQ,MAA9B,EAAqCD,CAAC,EAAtC,EACEF,MAAM,CAACL,CAAC,CAAC,YAAD,CAAD,CAAgBO,CAAhB,EAAmBE,IAApB,CAAN,GAAkCT,CAAC,CAAC,YAAD,CAAD,CAAgBO,CAAhB,EAAmBN,KAArD;;AACF,QAAIS,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeP,MAAf,CAAjB;AACA,QAAIQ,CAAC,GAAG,MAAMC,OAAO,EAArB;AACA,UAAMC,YAAY,CAACF,CAAC,CAACG,SAAH,CAAlB;AACAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCL,CAAC,CAACG,SAAnC;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA4BC,SAA5B;AACA,QAAIC,IAAI,GAAG,sCAAX;AACA,QAAIC,IAAI,GAAG,MAAMC,KAAK,CAACF,IAAD,EAAM;AACpBG,MAAAA,MAAM,EAAE,MADY;AAEpBC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB,kBAFX;AAGL,uBAAeb,CAAC,CAACG;AAHZ,OAFW;AAOlBW,MAAAA,WAAW,EAAE,SAPK;AAQlBC,MAAAA,IAAI,EAAElB;AARY,KAAN,CAAL,CASRmB,IATQ,CASHC,QAAQ,IAAI;AACtB,UAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZZ,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBU,QAAzB;AACA,eAAOA,QAAQ,CAACE,IAAT,EAAP;AACH,OAHD,MAGO;AACHb,QAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ,EAAqB,4BAArB;AACH;AACA,KAhBY,EAgBVD,IAhBU,CAgBLN,IAAI,IACR;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBG,IAAtB;AACH,KAnBQ,EAqBZU,KArBY,CAqBN,UAASC,KAAT,EAAgB;AACvBf,MAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDc,KAAK,CAACC,OAAtE;AACC,KAvBY,CAAjB;AAwBIxC,IAAAA,KAAK,CAACyC,eAAN,eACE;AAAK,MAAA,SAAS,EAAC,8DAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAUE;AAAK,QAAA,GAAG,EAAEC,QAAV;AAAoB,QAAA,GAAG,EAAC,EAAxB;AAA2B,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAC,OAAV;AAAkBC,UAAAA,SAAS,EAAC;AAA5B;AAAlC;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeL,GA5DH;;AA8DA,sBACI;AAAK,IAAA,SAAS,EAAC,8DAAf;AAAA,4BACI;AAAK,MAAA,GAAG,EAAE9C,GAAV;AAAe,MAAA,GAAG,EAAC,EAAnB;AAAsB,MAAA,SAAS,EAAC;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAKI;AAAI,MAAA,SAAS,EAAC,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAQI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAO,QAAA,EAAE,EAAC,KAAV;AAAgB,QAAA,IAAI,EAAC,OAArB;AAA6B,QAAA,IAAI,EAAC,OAAlC;AAA0C,QAAA,SAAS,EAAC,iBAApD;AAAsE,QAAA,WAAW,EAAC,GAAlF;AAAsF,QAAA,QAAQ;AAA9F;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,OAAO,EAAC,KAAf;AAAqB,QAAA,SAAS,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ,eAYI;AAAQ,MAAA,SAAS,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAeI;AAAM,MAAA,SAAS,EAAC,uDAAhB;AAAyE,MAAA,OAAO,EAAE,MAAME,KAAK,CAACyC,eAAN,eAAsB,QAAC,SAAD;AAAW,QAAA,eAAe,EAAEzC,KAAK,CAACyC;AAAlC;AAAA;AAAA;AAAA;AAAA,cAAtB,CAAxF;AAAA,8BACI;AAAK,QAAA,GAAG,EAAE5C,IAAV;AAAgB,QAAA,GAAG,EAAC,EAApB;AAAuB,QAAA,SAAS,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CAtFD;;KAAME,c;AAwFN,eAAeA,cAAf","sourcesContent":["import React from 'react';\r\nimport Loginform from './LoginForm';\r\nimport left from \"../assets/icon/left.png\"\r\nimport key from \"../assets/img/key.png\"\r\n\r\nconst Passwordforgot = (props) => {\r\n\r\n    const ask_for_new_password = async (e) => {\r\n        e.preventDefault()       \r\n        let email = $('#in3')[0].value\r\n        const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n        if(email==\" \"){\r\n          setError('Veuillez indiquer une adresse email')\r\n          return ('email erreur')\r\n        }\r\n        if(!regex.test(email)){\r\n          setError(\"Format de l'email incorrect\")\r\n          return ('email erreur')\r\n        }\r\n        let inputs = new Object()\r\n        for(let i=0;i<$(\".inputform\").length;i++)\r\n          inputs[$(\".inputform\")[i].name] = $(\".inputform\")[i].value\r\n        var inputsForm = JSON.stringify(inputs);\r\n        let r = await getCSRF()\r\n        await setCsrftoken(r.csrfToken)\r\n        localStorage.setItem('csrftoken',r.csrfToken)\r\n        console.log(\"csrftoken OK2\",csrftoken)\r\n        var url2 = \"http://localhost:8000/ask-reset-mdp/\"\r\n        let data = await fetch(url2,{\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'X-CSRFToken': r.csrfToken\r\n                  }, \r\n                  credentials: 'include',\r\n                  body: inputsForm\r\n              }).then(response => {\r\n            if(response.ok) {\r\n                console.log(\"fetchLogin\",response)\r\n                return response.json();\r\n            } else {\r\n                console.log(response,'Mauvaise réponse du réseau');\r\n            }\r\n            }).then(data => \r\n                {\r\n                    console.log(\"reponse\",data)\r\n                }\r\n                )\r\n            .catch(function(error) {\r\n            console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n            });\r\n            props.setModalcontent(\r\n              <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                <h3>\r\n                  Merci pour votre inscription, nous venons de vous envoyer un mail afin d'activer votre compte !\r\n                </h3>\r\n                <small>\r\n                  Pensez a vérifier vos spam, et pour tout autre problème ou questionnement, contacter nous sur contact.cam.securite@gmail.com ou via notre formulaire de contact sur cam-securite.com \r\n                </small>\r\n                <p>\r\n                  Bonne journée de la par de l'équipe de Cam Securite !\r\n                </p>\r\n                <img src={register} alt=\"\" style={{maxWidth:'400px',objectFit:'contain',}} />\r\n              </div>\r\n  )\r\n  \r\n      }\r\n\r\n    return (\r\n        <div className='d-flex flex-column align-items-center justify-content-center' >\r\n            <img src={key} alt=\"\" className=\"iconXL\" />\r\n            <h1 className=\"text-center fs-4\">\r\n                Mot de passe oublié ?\r\n            </h1>\r\n            <h2 className=\"text-center fs-6 mt-1 text-grey\">\r\n                Nous vous enverrons un mail avec les instructions pour réinitialiser votre mot de passe\r\n            </h2>\r\n            <div className=\"formrow w-100\">\r\n                <input id=\"in1\" type=\"email\" name='email' className=\"inputform w-100\" placeholder=\" \" required/>\r\n                <label htmlFor=\"in1\" className=\"labelform\">Email*</label>\r\n            </div> \r\n            <button className=\"formbtn\">\r\n                Réinitialiser le mot de passe\r\n            </button>\r\n            <span className=\"pointer text-grey mt-2 d-flex align-items-center link\"  onClick={() => props.setModalcontent(<Loginform setModalcontent={props.setModalcontent}/>)} >\r\n                <img src={left} alt=\"\" className=\"iconS\" />\r\n                Retour à la page de connexion\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Passwordforgot;\r\n"]},"metadata":{},"sourceType":"module"}