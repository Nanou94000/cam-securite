{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nourou\\\\Documents\\\\Developpement WEB\\\\CamSecurite-django-react\\\\frontend\\\\src\\\\pages\\\\components\\\\Livraison.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst google = window.google;\n\nconst Livraison = props => {\n  _s();\n\n  let autocomplete;\n  let address1Field;\n  let address2Field;\n  let postalField;\n\n  function initAutocomplete() {\n    address1Field = document.querySelector(\"#adresse\");\n    address2Field = document.querySelector(\"#address2\");\n    postalField = document.querySelector(\"#in6\"); // Create the autocomplete object, restricting the search predictions to\n    // addresses in the US and Canada.\n\n    autocomplete = new google.maps.places.Autocomplete(address1Field, {\n      componentRestrictions: {\n        country: [\"fr\", \"ca\"]\n      },\n      fields: [\"address_components\", \"geometry\"],\n      types: [\"address\"]\n    });\n    address1Field.focus(); // When the user selects an address from the drop-down, populate the\n    // address fields in the form.\n\n    autocomplete.addListener(\"place_changed\", fillInAddress);\n  }\n\n  function fillInAddress() {\n    // Get the place details from the autocomplete object.\n    const place = autocomplete.getPlace();\n    let address1 = \"\";\n    let postcode = \"\"; // Get each component of the address from the place details,\n    // and then fill-in the corresponding field on the form.\n    // place.address_components are google.maps.GeocoderAddressComponent objects\n    // which are documented at http://goo.gle/3l5i5Mr\n\n    for (const component of place.address_components) {\n      const componentType = component.types[0];\n\n      switch (componentType) {\n        case \"street_number\":\n          {\n            address1 = `${component.long_name} ${address1}`;\n            break;\n          }\n\n        case \"route\":\n          {\n            address1 += component.short_name;\n            break;\n          }\n\n        case \"postal_code\":\n          {\n            postcode = `${component.long_name}${postcode}`;\n            break;\n          }\n\n        case \"postal_code_suffix\":\n          {\n            postcode = `${postcode}-${component.long_name}`;\n            break;\n          }\n\n        case \"locality\":\n          document.querySelector(\"#in7\").value = component.long_name;\n          break;\n\n        case \"administrative_area_level_1\":\n          {\n            document.querySelector(\"#state\").value = component.short_name;\n            break;\n          }\n\n        case \"country\":\n          document.querySelector(\"#in9\").value = component.long_name;\n          break;\n      }\n    }\n\n    address1Field.value = address1;\n    postalField.value = postcode; // After filling the form with address components from the Autocomplete\n    // prediction, set cursor focus on the second address line to encourage\n    // entry of subpremise information such as apartment, unit, or floor number.\n\n    address2Field.focus();\n  }\n\n  const [u, setU] = useState({\n    id: 0,\n    user: {\n      first_name: \"\",\n      last_name: \"\"\n    }\n  });\n  console.log('u u u u u u  u  u u  u u u', u);\n\n  const getCSRF = async () => {\n    var url2 = \"http://localhost:8000/csrf/\";\n    let r = '';\n    await fetch(url2, {\n      credentials: 'include'\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"fetchCSRF\");\n        r = response.json();\n      } else {\n        console.log(response, 'Mauvaise réponse du réseau');\n      }\n    }).catch(function (error) {\n      console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n    });\n    return r;\n  };\n\n  useEffect(async () => {\n    let t = async () => {\n      var url = \"http://localhost:8000/current_user/?format=json\";\n      let r = await getCSRF();\n      const csrftoken = r.csrfToken;\n      let data = await fetch(url, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        credentials: 'include'\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"current_user ttt\", response);\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        return data;\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n      setU(data);\n    };\n\n    await t();\n    return () => {};\n  }, [u.id]);\n  const user = props.user ? props.user : {\n    prenom: \"\",\n    nom: \"\",\n    email: \"\",\n    adresse: \"\",\n    ville: \"\",\n    code_postal: \"\",\n    pays: \"\",\n    telephone: \"\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"commandeStep w-100 justify-content-center align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      class: \"commandStepTitre text-center\",\n      children: \"Informations livraison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"commandeStepContenu pb-5 d-flex flex-column justify-content-center align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"livraison\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"d-flex justify-content-between align-items-center w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"formrow me-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"in1\",\n              type: \"text\",\n              name: \"prenom\",\n              class: \"inputform\",\n              defaultValue: u.user.first_name,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"in1\",\n              class: \"labelform\",\n              children: \"Pr\\xE9nom*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"formrow ms-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"in2\",\n              type: \"text\",\n              name: \"nom\",\n              class: \"inputform\",\n              defaultValue: u.user.last_name,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"in2\",\n              class: \"labelform\",\n              children: \"Nom*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"formrow w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"in3\",\n            type: \"email\",\n            name: \"email\",\n            class: \"inputform\",\n            defaultValue: u.user.email,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"in3\",\n            class: \"labelform\",\n            children: \"Email*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"formrow w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"in6\",\n            type: \"text\",\n            name: \"adresse\",\n            class: \"inputform\",\n            defaultValue: u.adresse,\n            autocomplete: \"off\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"in6\",\n            class: \"labelform\",\n            children: \"Adresse*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"d-flex justify-content-between align-items-center w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"formrow me-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"in7\",\n              type: \"text\",\n              name: \"ville\",\n              class: \"inputform \",\n              defaultValue: u.ville,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"in7\",\n              class: \"labelform\",\n              children: \"Ville*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"formrow \\xF9s-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"in8\",\n              type: \"text\",\n              name: \"cp\",\n              class: \"inputform \",\n              value: u.code_postal,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"in8\",\n              class: \"labelform\",\n              children: \"Code postal*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"d-flex justify-content-between align-items-center w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"formrow me-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"in9\",\n              type: \"text\",\n              name: \"pays\",\n              class: \"inputform \",\n              defaultValue: u.pays,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"in9\",\n              class: \"labelform\",\n              children: \"Pays*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"formrow ms-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"in10\",\n              type: \"text\",\n              name: \"telephone\",\n              class: \"inputform \",\n              defaultValue: u.telephone,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"in10\",\n              class: \"labelform\",\n              children: \"T\\xE9l\\xE9phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), props.button]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Livraison, \"d7x32zxOtvWP82rUMkwbZtHkCtI=\");\n\n_c = Livraison;\nexport default Livraison;\n\nvar _c;\n\n$RefreshReg$(_c, \"Livraison\");","map":{"version":3,"sources":["C:/Users/Nourou/Documents/Developpement WEB/CamSecurite-django-react/frontend/src/pages/components/Livraison.js"],"names":["React","useEffect","useState","google","window","Livraison","props","autocomplete","address1Field","address2Field","postalField","initAutocomplete","document","querySelector","maps","places","Autocomplete","componentRestrictions","country","fields","types","focus","addListener","fillInAddress","place","getPlace","address1","postcode","component","address_components","componentType","long_name","short_name","value","u","setU","id","user","first_name","last_name","console","log","getCSRF","url2","r","fetch","credentials","then","response","ok","json","catch","error","message","t","url","csrftoken","csrfToken","data","headers","prenom","nom","email","adresse","ville","code_postal","pays","telephone","button"],"mappings":"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","sourcesContent":["import React, {useEffect, useState}  from 'react';\r\nconst google = window.google;\r\n\r\nconst Livraison = (props) => {\r\n    let autocomplete;\r\n    let address1Field;\r\n    let address2Field;\r\n    let postalField;\r\n\r\n    function initAutocomplete() {\r\n    address1Field = document.querySelector(\"#adresse\");\r\n    address2Field = document.querySelector(\"#address2\");\r\n    postalField = document.querySelector(\"#in6\");\r\n    // Create the autocomplete object, restricting the search predictions to\r\n    // addresses in the US and Canada.\r\n    autocomplete = new google.maps.places.Autocomplete(address1Field, {\r\n        componentRestrictions: { country: [\"fr\", \"ca\"] },\r\n        fields: [\"address_components\", \"geometry\"],\r\n        types: [\"address\"],\r\n    });\r\n    address1Field.focus();\r\n    // When the user selects an address from the drop-down, populate the\r\n    // address fields in the form.\r\n    autocomplete.addListener(\"place_changed\", fillInAddress);\r\n    }\r\n\r\n    function fillInAddress() {\r\n    // Get the place details from the autocomplete object.\r\n    const place = autocomplete.getPlace();\r\n    let address1 = \"\";\r\n    let postcode = \"\";\r\n\r\n    // Get each component of the address from the place details,\r\n    // and then fill-in the corresponding field on the form.\r\n    // place.address_components are google.maps.GeocoderAddressComponent objects\r\n    // which are documented at http://goo.gle/3l5i5Mr\r\n    for (const component of place.address_components) {\r\n        const componentType = component.types[0];\r\n\r\n        switch (componentType) {\r\n        case \"street_number\": {\r\n            address1 = `${component.long_name} ${address1}`;\r\n            break;\r\n        }\r\n\r\n        case \"route\": {\r\n            address1 += component.short_name;\r\n            break;\r\n        }\r\n\r\n        case \"postal_code\": {\r\n            postcode = `${component.long_name}${postcode}`;\r\n            break;\r\n        }\r\n\r\n        case \"postal_code_suffix\": {\r\n            postcode = `${postcode}-${component.long_name}`;\r\n            break;\r\n        }\r\n        case \"locality\":\r\n            document.querySelector(\"#in7\").value = component.long_name;\r\n            break;\r\n        case \"administrative_area_level_1\": {\r\n            document.querySelector(\"#state\").value = component.short_name;\r\n            break;\r\n        }\r\n        case \"country\":\r\n            document.querySelector(\"#in9\").value = component.long_name;\r\n            break;\r\n        }\r\n    }\r\n\r\n    address1Field.value = address1;\r\n    postalField.value = postcode;\r\n    // After filling the form with address components from the Autocomplete\r\n    // prediction, set cursor focus on the second address line to encourage\r\n    // entry of subpremise information such as apartment, unit, or floor number.\r\n    address2Field.focus();\r\n    }\r\n\r\n    const [u,setU] = useState({id:0,user:{first_name:\"\",last_name:\"\"}})\r\n    console.log('u u u u u u  u  u u  u u u',u)\r\n    const getCSRF = async () => {\r\n    var url2 = \"http://localhost:8000/csrf/\"\r\n    let r = '' \r\n    await fetch(url2, {\r\n        credentials: 'include',\r\n      }).then(response => {\r\n        if(response.ok) {\r\n            console.log(\"fetchCSRF\")\r\n            r = response.json();\r\n        } else {\r\n            console.log(response,'Mauvaise réponse du réseau');\r\n        }\r\n        })\r\n        .catch(function(error) {\r\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n        });\r\n    return r\r\n    }\r\n\r\n    useEffect(async () => {\r\n        let t = async () => {\r\n            var url = \"http://localhost:8000/current_user/?format=json\"\r\n            let r = await getCSRF()\r\n            const csrftoken = r.csrfToken\r\n            let data = await fetch(url,{                \r\n              headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'X-CSRFToken': csrftoken\r\n            }, \r\n            credentials: 'include',\r\n            }).then(response => {\r\n            if(response.ok) {\r\n                console.log(\"current_user ttt\",response)\r\n                return response.json();\r\n            } else {\r\n                console.log(response,'Mauvaise réponse du réseau');\r\n            }\r\n            }).then(data => \r\n                {\r\n                  return(data)\r\n                }\r\n                )\r\n            .catch(function(error) {\r\n              console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n            });\r\n            setU(data)\r\n          }\r\n          await t()\r\n        return () => {\r\n        };\r\n    }, [u.id]);\r\n    const user = (\r\n        props.user\r\n        ?\r\n            props.user\r\n        :\r\n            {\r\n                prenom:\"\",\r\n                nom:\"\",\r\n                email:\"\",\r\n                adresse:\"\",\r\n                ville:\"\",\r\n                code_postal:\"\",\r\n                pays:\"\",\r\n                telephone:\"\"\r\n            }\r\n    )\r\n    return (\r\n\r\n        <div class=\"commandeStep w-100 justify-content-center align-items-center\">\r\n            <h4 class=\"commandStepTitre text-center\">\r\n                Informations livraison\r\n            </h4>\r\n            <div class=\"commandeStepContenu pb-5 d-flex flex-column justify-content-center align-items-center\">\r\n                <div class=\"livraison\">\r\n\r\n                    <div class=\"d-flex justify-content-between align-items-center w-100\">\r\n                        <div class=\"formrow me-2\">\r\n                            <input id=\"in1\" type=\"text\" name='prenom' class=\"inputform\" defaultValue={u.user.first_name} required/>\r\n                                <label for=\"in1\" class=\"labelform\">Prénom*</label>\r\n                        </div>\r\n                        <div class=\"formrow ms-2\">\r\n                            <input id=\"in2\" type=\"text\" name='nom' class=\"inputform\" defaultValue={u.user.last_name}  required/>\r\n                                <label for=\"in2\" class=\"labelform\">Nom*</label>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"formrow w-100\">\r\n                        <input id=\"in3\" type=\"email\" name='email' class=\"inputform\" defaultValue={u.user.email}  required/>\r\n                            <label for=\"in3\" class=\"labelform\">Email*</label>\r\n                    </div>\r\n\r\n                    <div class=\"formrow w-100\">\r\n                        <input id=\"in6\" type=\"text\" name='adresse' class=\"inputform\" defaultValue={u.adresse} autocomplete=\"off\"  required/>\r\n                            <label for=\"in6\" class=\"labelform\">Adresse*</label>\r\n                    </div>\r\n\r\n                    <div class=\"d-flex justify-content-between align-items-center w-100\">\r\n                        <div class=\"formrow me-2\">\r\n                            <input id=\"in7\" type=\"text\" name='ville' class=\"inputform \" defaultValue={u.ville}  required/>\r\n                                <label for=\"in7\" class=\"labelform\">Ville*</label>\r\n                        </div>\r\n                        <div class=\"formrow ùs-2\">\r\n                            <input id=\"in8\" type=\"text\" name='cp' class=\"inputform \" value={u.code_postal}  required/>\r\n                                <label for=\"in8\" class=\"labelform\">Code postal*</label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"d-flex justify-content-between align-items-center w-100\">\r\n                        <div class=\"formrow me-2\">\r\n                            <input id=\"in9\" type=\"text\" name='pays' class=\"inputform \" defaultValue={u.pays}  required/>\r\n                                <label for=\"in9\" class=\"labelform\">Pays*</label>\r\n                        </div>\r\n                        <div class=\"formrow ms-2\">\r\n                            <input id=\"in10\" type=\"text\" name='telephone' class=\"inputform \" defaultValue={u.telephone}  required/>\r\n                                <label for=\"in10\" class=\"labelform\">Téléphone</label>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                {props.button}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Livraison;\r\n"]},"metadata":{},"sourceType":"module"}