{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nourou\\\\Documents\\\\Developpement WEB\\\\CamSecurite-django-react\\\\frontend\\\\src\\\\pages\\\\components\\\\Commandes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Commande from './Commande';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Commandes = props => {\n  _s();\n\n  const [commandes, setCommandes] = useState([\"\"]);\n  const [u, setU] = useState({\n    id: 0,\n    user: {\n      first_name: \"\",\n      last_name: \"\"\n    }\n  });\n  console.log('u u 168161', u);\n\n  const getCSRF = async () => {\n    var url2 = \"http://localhost:8000/csrf/\";\n    let r = '';\n    await fetch(url2, {\n      credentials: 'include'\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"fetchCSRF\");\n        r = response.json();\n      } else {\n        console.log(response, 'Mauvaise réponse du réseau');\n      }\n    }).catch(function (error) {\n      console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n    });\n    return r;\n  };\n\n  console.log('props ppp produit', props);\n  useEffect(async () => {\n    let t = async () => {\n      var url = \"http://localhost:8000/current_user/?format=json\";\n      let r = await getCSRF();\n      const csrftoken = r.csrfToken;\n      let data = await fetch(url, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        credentials: 'include'\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"current_user ttt\", response);\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        return data;\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n      setU(data);\n    };\n\n    await t();\n\n    if (u.id != 0) {\n      var url2 = `http://localhost:8000/compte/${u.id}/commandes`;\n      let data2 = await fetch(url2).then(response => {\n        if (response.ok) {\n          console.log(\"fetch\");\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        return data;\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n      setCommandes(data2);\n      console.log(\"mmmmmmmmmmmmmmm\", data2);\n    }\n\n    return () => {};\n  }, [u.id]);\n  let commandesList = \"Aucune commande\";\n  console.log(\"mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\", commandes.length);\n  commandesList = commandes.map(c => /*#__PURE__*/_jsxDEV(Commande, {\n    numero: c.numero,\n    date: c.date,\n    montant: c.montant,\n    statut: c.statut,\n    showHideModal: props.showHideModal,\n    modalContent: props.modalContent,\n    setModalcontent: props.setModalcontent\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 40\n  }, this));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: commandesList\n  }, void 0, false);\n};\n\n_s(Commandes, \"+V+VdGjiTo8NWZXtEcCxq7J2gO8=\");\n\n_c = Commandes;\nexport default Commandes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Commandes\");","map":{"version":3,"sources":["C:/Users/Nourou/Documents/Developpement WEB/CamSecurite-django-react/frontend/src/pages/components/Commandes.js"],"names":["React","Commande","Commandes","props","commandes","setCommandes","useState","u","setU","id","user","first_name","last_name","console","log","getCSRF","url2","r","fetch","credentials","then","response","ok","json","catch","error","message","useEffect","t","url","csrftoken","csrfToken","data","headers","data2","commandesList","length","map","c","numero","date","montant","statut","showHideModal","modalContent","setModalcontent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Commande from './Commande';\r\n\r\nconst Commandes = (props) => {\r\n    const [commandes,setCommandes] = useState([\"\"]);\r\n    const [u,setU] = useState({id:0,user:{first_name:\"\",last_name:\"\"}})\r\n    console.log('u u 168161',u)\r\n    const getCSRF = async () => {\r\n    var url2 = \"http://localhost:8000/csrf/\"\r\n    let r = '' \r\n    await fetch(url2, {\r\n        credentials: 'include',\r\n      }).then(response => {\r\n        if(response.ok) {\r\n            console.log(\"fetchCSRF\")\r\n            r = response.json();\r\n        } else {\r\n            console.log(response,'Mauvaise réponse du réseau');\r\n        }\r\n        })\r\n        .catch(function(error) {\r\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n        });\r\n    return r\r\n    }\r\n\r\n    console.log('props ppp produit',props)\r\n    useEffect(async () => {\r\n        let t = async () => {\r\n            var url = \"http://localhost:8000/current_user/?format=json\"\r\n            let r = await getCSRF()\r\n            const csrftoken = r.csrfToken\r\n            let data = await fetch(url,{                \r\n              headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'X-CSRFToken': csrftoken\r\n            }, \r\n            credentials: 'include',\r\n            }).then(response => {\r\n            if(response.ok) {\r\n                console.log(\"current_user ttt\",response)\r\n                return response.json();\r\n            } else {\r\n                console.log(response,'Mauvaise réponse du réseau');\r\n            }\r\n            }).then(data => \r\n                {\r\n                  return(data)\r\n                }\r\n                )\r\n            .catch(function(error) {\r\n              console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n            });\r\n            setU(data)\r\n          }\r\n          await t()\r\n          if(u.id!=0){\r\n              var url2 = `http://localhost:8000/compte/${u.id}/commandes`\r\n    \r\n              let data2 = await fetch(url2).then(response => {\r\n              if(response.ok) {\r\n                  console.log(\"fetch\")\r\n                  return response.json();\r\n              } else {\r\n                  console.log(response,'Mauvaise réponse du réseau');\r\n              }\r\n              }).then(data => \r\n                  {return data}\r\n                  )\r\n              .catch(function(error) {\r\n              console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n              });\r\n              setCommandes(data2)\r\n              console.log(\"mmmmmmmmmmmmmmm\",data2)\r\n          }\r\n        return () => {\r\n        };\r\n    }, [u.id]);\r\n\r\n    let commandesList = \"Aucune commande\"\r\n    console.log(\"mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\",commandes.length)\r\n    commandesList = commandes.map(c => <Commande numero={c.numero} date={c.date} montant={c.montant} statut={c.statut}  showHideModal={props.showHideModal} modalContent={props.modalContent} setModalcontent={props.setModalcontent} />)\r\n    return (\r\n        <>\r\n            {commandesList}\r\n        </>\r\n    );\r\n}\r\nexport default Commandes;\r\n"]},"metadata":{},"sourceType":"module"}