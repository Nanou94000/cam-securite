{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nourou\\\\Documents\\\\Developpement WEB\\\\CamSecurite-django-react\\\\frontend\\\\src\\\\pages\\\\components\\\\Stripe.js\",\n    _s = $RefreshSig$();\n\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport React, { useState } from \"react\";\nimport ApiService from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stripe = () => {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  const stripe = useStripe();\n  const elements = useElements(); // Handle real-time validation errors from the CardElement.\n\n  const handleChange = event => {\n    if (event.error) {\n      setError(event.error.message);\n    } else {\n      setError(null);\n    }\n  }; // Handle form submission.\n\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const card = elements.getElement(CardElement);\n    const {\n      paymentMethod,\n      error\n    } = await stripe.createPaymentMethod({\n      type: 'card',\n      card: card\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"stripe-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-input\",\n        id: \"email\",\n        name: \"name\",\n        type: \"email\",\n        placeholder: \"jenny.rosen@example.com\",\n        required: true,\n        value: email,\n        onChange: event => {\n          setEmail(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"card-element\",\n        children: \"Credit or debit card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {\n        id: \"card-element\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-errors\",\n        role: \"alert\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"submit-btn\",\n      children: \"Submit Payment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Stripe, \"D43dkuAcnHm+jcVwE/9kry9Tyxw=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = Stripe;\nexport default Stripe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Stripe\");","map":{"version":3,"sources":["C:/Users/Nourou/Documents/Developpement WEB/CamSecurite-django-react/frontend/src/pages/components/Stripe.js"],"names":["CardElement","useElements","useStripe","React","useState","ApiService","Stripe","error","setError","email","setEmail","stripe","elements","handleChange","event","message","handleSubmit","preventDefault","card","getElement","paymentMethod","createPaymentMethod","type","target","value"],"mappings":";;;AAAA,SAAQA,WAAR,EAAqBC,WAArB,EAAkCC,SAAlC,QAAkD,yBAAlD;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,QAAvB;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMO,MAAM,GAAGT,SAAS,EAAxB;AACA,QAAMU,QAAQ,GAAGX,WAAW,EAA5B,CAJmB,CAKrB;;AACA,QAAMY,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIA,KAAK,CAACP,KAAV,EAAiB;AACfC,MAAAA,QAAQ,CAACM,KAAK,CAACP,KAAN,CAAYQ,OAAb,CAAR;AACD,KAFD,MAEO;AACLP,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;AACF,GAND,CANqB,CAarB;;;AACA,QAAMQ,YAAY,GAAG,MAAOF,KAAP,IAAiB;AACpCA,IAAAA,KAAK,CAACG,cAAN;AACA,UAAMC,IAAI,GAAGN,QAAQ,CAACO,UAAT,CAAoBnB,WAApB,CAAb;AACA,UAAM;AAACoB,MAAAA,aAAD;AAAgBb,MAAAA;AAAhB,QAAyB,MAAMI,MAAM,CAACU,mBAAP,CAA2B;AAC7DC,MAAAA,IAAI,EAAE,MADuD;AAE7DJ,MAAAA,IAAI,EAAEA;AAFuD,KAA3B,CAArC;AAID,GAPD;;AASA,sBACE;AAAM,IAAA,QAAQ,EAAEF,YAAhB;AAA8B,IAAA,SAAS,EAAC,aAAxC;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,SAAS,EAAC,YAAjB;AAA8B,QAAA,EAAE,EAAC,OAAjC;AAAyC,QAAA,IAAI,EAAC,MAA9C;AAAwD,QAAA,IAAI,EAAC,OAA7D;AAAqE,QAAA,WAAW,EAAC,yBAAjF;AAA2G,QAAA,QAAQ,MAAnH;AACN,QAAA,KAAK,EAAEP,KADD;AACQ,QAAA,QAAQ,EAAGK,KAAD,IAAW;AAAEJ,UAAAA,QAAQ,CAACI,KAAK,CAACS,MAAN,CAAaC,KAAd,CAAR;AAA6B;AAD5D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAO,QAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,cAAhB;AAA+B,QAAA,QAAQ,EAAEX;AAAzC;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,IAAI,EAAC,OAAlC;AAAA,kBAA2CN;AAA3C;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAWE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBC,CAxCD;;GAAMD,M;UAGWJ,S,EACED,W;;;KAJbK,M;AAyCN,eAAeA,MAAf","sourcesContent":["import {CardElement, useElements, useStripe} from \"@stripe/react-stripe-js\";\r\nimport React, {useState} from \"react\";\r\nimport ApiService from \"../api\";\r\nconst Stripe = () => {\r\n  const [error, setError] = useState(null);\r\n  const [email, setEmail] = useState('');\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n// Handle real-time validation errors from the CardElement.\r\nconst handleChange = (event) => {\r\n  if (event.error) {\r\n    setError(event.error.message);\r\n  } else {\r\n    setError(null);\r\n  }\r\n}\r\n// Handle form submission.\r\nconst handleSubmit = async (event) => {\r\n  event.preventDefault();\r\n  const card = elements.getElement(CardElement);\r\n  const {paymentMethod, error} = await stripe.createPaymentMethod({\r\n     type: 'card',\r\n     card: card\r\n});\r\n};\r\n\r\nreturn (\r\n  <form onSubmit={handleSubmit} className=\"stripe-form\">\r\n    <div className=\"form-row\">\r\n      <label htmlFor=\"email\">Email Address</label>\r\n      <input className=\"form-input\" id=\"email\" name=\"name\"    type=\"email\" placeholder=\"jenny.rosen@example.com\" required \r\nvalue={email} onChange={(event) => { setEmail(event.target.value)}} />\r\n    </div>\r\n    <div className=\"form-row\">\r\n      <label for=\"card-element\">Credit or debit card</label> \r\n      <CardElement id=\"card-element\" onChange={handleChange}/>\r\n      <div className=\"card-errors\" role=\"alert\">{error}</div>\r\n    </div>\r\n    <button type=\"submit\" className=\"submit-btn\">\r\n      Submit Payment\r\n    </button>\r\n  </form>\r\n );\r\n};\r\nexport default Stripe;"]},"metadata":{},"sourceType":"module"}