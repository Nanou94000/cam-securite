{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nourou\\\\Documents\\\\Developpement WEB\\\\CamSecurite-django-react\\\\frontend\\\\src\\\\pages\\\\PanierProcess.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport payment from './assets/img/payment.jpg';\nimport { gsap } from \"gsap\";\nimport { Outlet, Link, useNavigate } from 'react-router-dom';\nimport Choixlivraison from './components/ChoixLivraison';\nimport Commanderecap from './components/CommandeRecap';\nimport Livraison from './components/Livraison';\nimport Panier from './components/Panier';\nimport Stepbarre from './components/StepBarre';\nimport $ from 'jquery';\nimport Payementchoix from './components/PayementChoix';\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Panierprocess = props => {\n  _s();\n\n  let navigate = useNavigate();\n  const [panierItems, setPanieritems] = useState(['']);\n  const [sousTotal, setSoustotal] = useState('');\n  const [total, setTotal] = useState('');\n  const [livraison, setLivraison] = useState(null);\n  const [panier, setPanier] = useState('');\n  const [u, setU] = useState('');\n\n  const getCSRF = async () => {\n    var url2 = \"http://localhost:8000/csrf/\";\n    let r = '';\n    await fetch(url2, {\n      credentials: 'include'\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"fetchCSRF panier process\");\n        r = response.json();\n      } else {\n        console.log(response, 'Mauvaise réponse du réseau');\n      }\n    }).catch(function (error) {\n      console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n    });\n    return r;\n  };\n\n  console.log('props ppp produit', props);\n  useEffect(async () => {\n    let t = async () => {\n      var url = \"http://localhost:8000/current_user/?format=json\";\n      let r = await getCSRF();\n      const csrftoken = r.csrfToken;\n      let data = await fetch(url, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        credentials: 'include'\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"current_user de panier process\", response);\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        return data;\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n      setU(data);\n    };\n\n    await t();\n\n    if (u.id != undefined) {\n      var url2 = `http://localhost:8000/panier/${props.user.id}/`;\n      let data2 = await fetch(url2).then(response => {\n        if (response.ok) {\n          console.log(\"fetch panier panier process\");\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        return data;\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n      setPanieritems(data2);\n      setPanier(data2[0].panier);\n      console.log(\"ddata1151\", panierItems);\n    }\n\n    return () => {};\n  }, [u.id]);\n\n  const goToPanier = () => {\n    setPanierStep( /*#__PURE__*/_jsxDEV(Panier, {\n      user: u,\n      button: btnPanier\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }, this));\n    setStepBarreBtn(btnPanier);\n  };\n\n  const goToLivraison = () => {\n    setPanierStep( /*#__PURE__*/_jsxDEV(Livraison, {\n      button: btnLivraison\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 23\n    }, this));\n    setStepBarreBtn(btnLivraison);\n    $(\"#stepPanier\").addClass('stepValide');\n    $(\"#panierToLivraison\").addClass(\"stepStateActive\");\n    $(\"#stepPanier\").removeClass(\"stepActive\");\n    setTimeout(() => $(\"#stepLivraison\").addClass('stepActive'), 1000);\n  };\n\n  const goToChoixLivraison = async () => {\n    let inputs = new Object();\n\n    for (let i = 0; i < $(\".inputform\").length; i++) inputs[$(\".inputform\")[i].name] = $(\".inputform\")[i].value;\n\n    var inputsForm = JSON.stringify(inputs);\n    console.log('entrer:::::', inputsForm);\n    let r = await getCSRF();\n    console.log(\"csrftoken OK\", r.csrfToken);\n    let csrftoken = r.csrfToken;\n    let us = '';\n\n    let t = async () => {\n      var url = \"http://localhost:8000/current_user/?format=json\";\n      let r = await getCSRF();\n      const csrftoken = r.csrfToken;\n      let data = await fetch(url, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        credentials: 'include'\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"current_user de panier process\", response);\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        return data;\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n      us = data;\n    };\n\n    await t();\n\n    if (us != 'rien trouvé') {\n      var url2 = \"http://localhost:8000/users/\" + us.id + \"/\";\n      await fetch(url2, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        credentials: 'include',\n        body: inputsForm\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"fetchLogin\", response);\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        console.log(\"reponse\", data);\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n    } else {\n      localStorage.setItem('user', inputsForm);\n      console.log('user coooooooookie', localStorage.getItem('user'));\n    }\n\n    setPanierStep( /*#__PURE__*/_jsxDEV(Choixlivraison, {\n      button: btnChoixLivraison\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 23\n    }, this));\n    setStepBarreBtn(btnChoixLivraison);\n    $(\"#stepLivraison\").addClass('stepValide');\n    $(\"#livraisonToChoixLivraison\").addClass(\"stepStateActive\");\n    $(\"#stepLivraison\").removeClass(\"stepActive\");\n    setTimeout(() => $(\"#stepChoixLivraison\").addClass('stepActive'), 1000);\n  };\n\n  const goToRecap = async () => {\n    let inputs = new Object();\n    console.log('le choix de la livraison:', $(\".livChoixActive\")[0]);\n    inputs[\"livraison\"] = $(\".livChoixActive\")[0].id;\n    var inputsForm = JSON.stringify(inputs);\n    console.log('entrer:::::', inputsForm);\n    let r = await getCSRF();\n    console.log(\"csrftoken OK\", r.csrfToken);\n    let csrftoken = r.csrfToken;\n\n    let t = async () => {\n      var url = \"http://localhost:8000/current_user/?format=json\";\n      let r = await getCSRF();\n      const csrftoken = r.csrfToken;\n      let data = await fetch(url, {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        credentials: 'include'\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"current_user de panier process\", response);\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        return data;\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n      return data;\n    };\n\n    let us = await t();\n\n    if (us != 'rien trouvé') {\n      var url2 = \"http://localhost:8000/choix-livraison/\" + us.id + \"/\";\n      await fetch(url2, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'X-CSRFToken': csrftoken\n        },\n        credentials: 'include',\n        body: inputsForm\n      }).then(response => {\n        if (response.ok) {\n          console.log(\"fetchLogin\", response);\n          return response.json();\n        } else {\n          console.log(response, 'Mauvaise réponse du réseau');\n        }\n      }).then(data => {\n        console.log(\"reponse\", data);\n      }).catch(function (error) {\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n      });\n    } else {\n      localStorage.setItem('livraison', inputsForm);\n      console.log('livraison coooooooookie', localStorage.getItem('livraison'));\n    }\n\n    setPanierStep( /*#__PURE__*/_jsxDEV(Commanderecap, {\n      button: btnPayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 23\n    }, this));\n    setStepBarreBtn(btnPayer);\n    $(\"#stepChoixLivraison\").addClass('stepValide');\n    $(\"#choixLivraisonToRecapCommande\").addClass(\"stepStateActive\");\n    $(\"#stepChoixLivraison\").removeClass(\"stepActive\");\n    setTimeout(() => $(\"#stepRecapCommande\").addClass('stepActive'), 1000);\n  };\n\n  const btnPanier = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 d-flex align-items-center justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"produitBuyBtn\",\n      onClick: () => goToLivraison(),\n      children: \"Valider mon panier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 9\n  }, this);\n\n  const btnLivraison = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 d-flex align-items-center justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"produitBuyBtn\",\n      onClick: () => goToChoixLivraison(),\n      children: \"Confirmer les informations\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 276,\n    columnNumber: 9\n  }, this);\n\n  const btnChoixLivraison = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 d-flex align-items-center justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"produitBuyBtn\",\n      onClick: () => goToRecap(),\n      children: \"Choisir ce mode de livraison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 9\n  }, this);\n\n  const initialOptions = {\n    \"client-id\": \"ASFEAZSj8J9EWXzFzTRIqT9Frn3FONIEgXx87hRWxhJyCSv7_SshAkT1TW0OSjTySDAb4cEXdVW7olO3\",\n    currency: \"EUR\"\n  };\n\n  const btnPayer = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 d-flex align-items-center justify-content-center\",\n    onClick: async e => {\n      let t = async () => {\n        var url = \"http://localhost:8000/current_user/?format=json\";\n        let r = await getCSRF();\n        const csrftoken = r.csrfToken;\n        let data = await fetch(url, {\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': csrftoken\n          },\n          credentials: 'include'\n        }).then(response => {\n          if (response.ok) {\n            console.log(\"current_user de panier process\", response);\n            return response.json();\n          } else {\n            console.log(response, 'Mauvaise réponse du réseau');\n          }\n        }).then(data => {\n          return data;\n        }).catch(function (error) {\n          console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n        });\n        setU(data);\n        return data;\n      };\n\n      let us = await t();\n      console.log(\"########################\", us);\n      let p = \"\";\n\n      if (us != 'rien trouvé') {\n        var url2 = `http://localhost:8000/panier/${us.user.id}/`;\n        let data2 = await fetch(url2).then(response => {\n          if (response.ok) {\n            console.log(\"fetch panier panier process\");\n            return response.json();\n          } else {\n            console.log(response, 'Mauvaise réponse du réseau');\n          }\n        }).then(data => {\n          return data;\n        }).catch(function (error) {\n          console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n        });\n        setPanieritems(data2);\n        setPanier(data2[0].panier);\n        p = data2[0].panier;\n        console.log(\"ddata1151******************\", data2[0].panier);\n        props.showHideModal(e, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: '400px',\n            width: '100vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n            options: initialOptions,\n            children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n              style: {\n                layout: \"vertical\",\n                color: 'black',\n                width: \"500px\",\n                Tagline: false\n              },\n              createOrder: (data, actions) => {\n                return actions.order.create({\n                  purchase_units: [{\n                    amount: {\n                      value: String(data2[0].panier.totalaveclivraison)\n                    }\n                  }]\n                });\n              },\n              onApprove: async (datas, actions) => {\n                let t = async () => {\n                  var url = \"http://localhost:8000/current_user/?format=json\";\n                  let r = await getCSRF();\n                  const csrftoken = r.csrfToken;\n                  let data = await fetch(url, {\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-CSRFToken': csrftoken\n                    },\n                    credentials: 'include'\n                  }).then(response => {\n                    if (response.ok) {\n                      console.log(\"current_user de panier process\", response);\n                      return response.json();\n                    } else {\n                      console.log(response, 'Mauvaise réponse du réseau');\n                    }\n                  }).then(data => {\n                    return data;\n                  }).catch(function (error) {\n                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n                  });\n                  setU(data);\n                  return data;\n                };\n\n                let us = await t();\n\n                if (us != 'rien trouvé') {\n                  var url2 = \"http://localhost:8000/commande-success/\";\n                  let r = await getCSRF();\n                  const csrftoken = r.csrfToken;\n                  let data = await fetch(url2, {\n                    method: 'POST',\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-CSRFToken': csrftoken\n                    },\n                    credentials: 'include',\n                    body: JSON.stringify({\n                      'login': true,\n                      'id': us.user.id\n                    })\n                  }).then(response => {\n                    if (response.ok) {\n                      console.log(\"fetchLogin\", response);\n                      return response.json();\n                    } else {\n                      console.log(response, 'Mauvaise réponse du réseau');\n                    }\n                  }).then(data => {\n                    console.log(\"reponse\", data);\n                  }).catch(function (error) {\n                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n                  });\n                } else {\n                  var url2 = \"http://localhost:8000/commande-success/\";\n                  let r = await getCSRF();\n                  let user = JSON.parse(localStorage.getItem('user'));\n                  let produits = localStorage.getItem('panier');\n                  var obj = JSON.parse(produits);\n                  let t = [];\n\n                  if (produits != null || produits != undefined) {\n                    for (var i in obj) {\n                      console.log(obj[i]);\n                      t.push(obj[i].id);\n                    }\n                  }\n\n                  console.log('ttttttttttttttttttttttttttttt', t);\n                  const csrftoken = r.csrfToken;\n                  let data = await fetch(url2, {\n                    method: 'POST',\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-CSRFToken': csrftoken\n                    },\n                    credentials: 'include',\n                    body: JSON.stringify({\n                      'login': false,\n                      'sexe': user.sexe,\n                      'prenom': user.prenom,\n                      'nom': user.nom,\n                      'email': user.email,\n                      'adresse': user.adresse,\n                      'ville': user.ville,\n                      'pays': user.pays,\n                      'cp': user.cp,\n                      'telephone': user.telephone,\n                      'livraison': livraison,\n                      'produits': t\n                    })\n                  }).then(response => {\n                    if (response.ok) {\n                      console.log(\"fetchLogin\", response);\n                      return response.json();\n                    } else {\n                      console.log(response, 'Mauvaise réponse du réseau');\n                    }\n                  }).then(data => {\n                    console.log(\"reponse\", data);\n                  }).catch(function (error) {\n                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n                  });\n                }\n\n                navigate('/');\n                props.setModalcontent( /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex flex-column justify-content-center align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"modline\",\n                    children: [\"Merci, \", us.user.first_name, \", pour votre commande !\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"modline\",\n                    children: \"Votre commande a \\xE9t\\xE9 r\\xE9alis\\xE9 avec succ\\xE9s, nous venons de vous envoyer un email avec le detail de vos achats.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"modline\",\n                    children: \"Nous vous contacterons par email pour vous fournir les informations relative \\xE0 votre commande.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"modline\",\n                    src: payment,\n                    alt: \"\",\n                    style: {\n                      maxWidth: '400px',\n                      objectFit: 'contain'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 33\n                }, this));\n                gsap.from(\".modline\", {\n                  opacity: 0,\n                  scale: 0,\n                  duration: 0.4,\n                  stagger: 0.4,\n                  delay: 0.5\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this));\n      } else {\n        var url = `http://localhost:8000/panier/0/`;\n        let produits = localStorage.getItem('panier');\n        var obj = JSON.parse(produits);\n        console.log(obj);\n        let inputsForm = new Object();\n        let t = [];\n\n        if (produits != null || produits != undefined) {\n          for (var i in obj) {\n            console.log(obj[i]);\n            t.push(obj[i].id);\n          }\n        }\n\n        console.log('ttttttttttttttttttttttttttttt', t);\n        inputsForm['id'] = t;\n        console.log(inputsForm);\n        inputsForm = JSON.stringify(inputsForm);\n        let data = await fetch(url, {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n          },\n          body: inputsForm\n        }).then(response => {\n          if (response.ok) {\n            console.log(\"fetch\");\n            return response.json();\n          } else {\n            console.log(response, 'Mauvaise réponse du réseau');\n          }\n        }).then(data => {\n          return data;\n        }).catch(function (error) {\n          console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n        });\n        setPanier(data);\n        let st = 0;\n\n        for (let d = 0; d < data.length; d++) st = st + data[d].prix;\n\n        console.log('stststststststststststststststst', st);\n        setSoustotal(st);\n        let livid = localStorage.getItem('livraison');\n        livid = JSON.parse(livid).livraison;\n        console.log('lllllllllllllllllllllll', livid);\n        let url_liv = `http://localhost:8000/choix-livraison-nolog/${livid}/`;\n        let dataliv = await fetch(url_liv).then(r => {\n          if (r.ok) {\n            console.log(\"fetchLivraison\");\n            return r.json();\n          } else {\n            console.log(r, 'Mauvaise réponse du réseau');\n          }\n        }).then(data => {\n          return data;\n        }).catch(function (error) {\n          console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n        });\n        console.log('zevjmobevuebuvebveuv51333333333333333333', dataliv);\n        setLivraison(dataliv);\n        setTotal(st + dataliv.prix);\n        props.showHideModal(e, /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            maxWidth: '400px',\n            width: '100vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(PayPalScriptProvider, {\n            options: initialOptions,\n            children: /*#__PURE__*/_jsxDEV(PayPalButtons, {\n              style: {\n                layout: \"vertical\",\n                color: 'black',\n                width: \"500px\",\n                Tagline: false\n              },\n              createOrder: (data, actions) => {\n                return actions.order.create({\n                  purchase_units: [{\n                    amount: {\n                      value: st + dataliv.prix\n                    }\n                  }]\n                });\n              },\n              onApprove: async (datas, actions) => {\n                let t = async () => {\n                  var url = \"http://localhost:8000/current_user/?format=json\";\n                  let r = await getCSRF();\n                  const csrftoken = r.csrfToken;\n                  let data = await fetch(url, {\n                    headers: {\n                      'Accept': 'application/json',\n                      'Content-Type': 'application/json',\n                      'X-CSRFToken': csrftoken\n                    },\n                    credentials: 'include'\n                  }).then(response => {\n                    if (response.ok) {\n                      console.log(\"current_user de panier process\", response);\n                      return response.json();\n                    } else {\n                      console.log(response, 'Mauvaise réponse du réseau');\n                    }\n                  }).then(data => {\n                    return data;\n                  }).catch(function (error) {\n                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n                  });\n                  setU(data);\n                  return data;\n                };\n\n                let us = await t();\n                navigate('/');\n                props.setModalcontent( /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-flex flex-column justify-content-center align-items-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"modline\",\n                    children: [\"Merci, \", us.user.first_name, \", pour votre commande !\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 623,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"modline\",\n                    children: \"Votre commande a \\xE9t\\xE9 r\\xE9alis\\xE9 avec succ\\xE9s, nous venons de vous envoyer un email avec le detail de vos achats.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"modline\",\n                    children: \"Nous vous contacterons par email pour vous fournir les informations relative \\xE0 votre commande.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 625,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"modline\",\n                    src: payment,\n                    alt: \"\",\n                    style: {\n                      maxWidth: '400px',\n                      objectFit: 'contain'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 626,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 33\n                }, this));\n                gsap.from(\".modline\", {\n                  opacity: 0,\n                  scale: 0,\n                  duration: 0.4,\n                  stagger: 0.4,\n                  delay: 0.5\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 21\n        }, this));\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"produitBuyBtn\",\n      children: \"Payement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 9\n  }, this);\n\n  const [panierStep, setPanierStep] = useState( /*#__PURE__*/_jsxDEV(Panier, {\n    user: u,\n    button: btnPanier\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 643,\n    columnNumber: 49\n  }, this));\n  const [stepBarreBtn, setStepBarreBtn] = useState(btnPanier);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main w-100\",\n      children: [/*#__PURE__*/_jsxDEV(Stepbarre, {\n        toPanier: goToPanier,\n        toLivraison: goToLivraison,\n        toChoixLivraison: goToChoixLivraison,\n        toCommandeRecap: goToRecap,\n        button: stepBarreBtn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-100 justify-content-center\",\n        children: panierStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Panierprocess, \"5PSplLXM0hzU+MyMayo5uahgMcg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Panierprocess;\nexport default Panierprocess;\n\nvar _c;\n\n$RefreshReg$(_c, \"Panierprocess\");","map":{"version":3,"sources":["C:/Users/Nourou/Documents/Developpement WEB/CamSecurite-django-react/frontend/src/pages/PanierProcess.js"],"names":["React","useState","useEffect","payment","gsap","Outlet","Link","useNavigate","Choixlivraison","Commanderecap","Livraison","Panier","Stepbarre","$","Payementchoix","PayPalScriptProvider","PayPalButtons","Panierprocess","props","navigate","panierItems","setPanieritems","sousTotal","setSoustotal","total","setTotal","livraison","setLivraison","panier","setPanier","u","setU","getCSRF","url2","r","fetch","credentials","then","response","ok","console","log","json","catch","error","message","t","url","csrftoken","csrfToken","data","headers","id","undefined","user","data2","goToPanier","setPanierStep","btnPanier","setStepBarreBtn","goToLivraison","btnLivraison","addClass","removeClass","setTimeout","goToChoixLivraison","inputs","Object","i","length","name","value","inputsForm","JSON","stringify","us","method","body","localStorage","setItem","getItem","btnChoixLivraison","goToRecap","btnPayer","initialOptions","currency","e","p","showHideModal","maxWidth","width","layout","color","Tagline","actions","order","create","purchase_units","amount","String","totalaveclivraison","datas","parse","produits","obj","push","sexe","prenom","nom","email","adresse","ville","pays","cp","telephone","setModalcontent","first_name","objectFit","from","opacity","scale","duration","stagger","delay","st","d","prix","livid","url_liv","dataliv","panierStep","stepBarreBtn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,WAAvB,QAA0C,kBAA1C;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,oBAAT,EAA+BC,aAA/B,QAAoD,yBAApD;;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,MAAIC,QAAQ,GAAGZ,WAAW,EAA1B;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCpB,QAAQ,CAAC,CAAC,EAAD,CAAD,CAA9C;AACA,QAAM,CAACqB,SAAD,EAAWC,YAAX,IAA2BtB,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACuB,KAAD,EAAOC,QAAP,IAAmBxB,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACyB,SAAD,EAAWC,YAAX,IAA2B1B,QAAQ,CAAC,IAAD,CAAzC;AACA,QAAM,CAAC2B,MAAD,EAAQC,SAAR,IAAqB5B,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAAC6B,CAAD,EAAGC,IAAH,IAAW9B,QAAQ,CAAC,EAAD,CAAzB;;AACA,QAAM+B,OAAO,GAAG,YAAY;AAC5B,QAAIC,IAAI,GAAG,6BAAX;AACA,QAAIC,CAAC,GAAG,EAAR;AACA,UAAMC,KAAK,CAACF,IAAD,EAAO;AACdG,MAAAA,WAAW,EAAE;AADC,KAAP,CAAL,CAEDC,IAFC,CAEIC,QAAQ,IAAI;AAClB,UAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAP,QAAAA,CAAC,GAAGI,QAAQ,CAACI,IAAT,EAAJ;AACH,OAHD,MAGO;AACHF,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,KATC,EAUDK,KAVC,CAUK,UAASC,KAAT,EAAgB;AACvBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACC,KAZC,CAAN;AAaA,WAAOX,CAAP;AACC,GAjBD;;AAmBAM,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCvB,KAAhC;AACAhB,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI4C,CAAC,GAAG,YAAY;AAChB,UAAIC,GAAG,GAAG,iDAAV;AACA,UAAIb,CAAC,GAAG,MAAMF,OAAO,EAArB;AACA,YAAMgB,SAAS,GAAGd,CAAC,CAACe,SAApB;AACA,UAAIC,IAAI,GAAG,MAAMf,KAAK,CAACY,GAAD,EAAK;AACzBI,QAAAA,OAAO,EAAE;AACT,oBAAU,kBADD;AAET,0BAAgB,kBAFP;AAGT,yBAAeH;AAHN,SADgB;AAM3BZ,QAAAA,WAAW,EAAE;AANc,OAAL,CAAL,CAOdC,IAPc,CAOTC,QAAQ,IAAI;AACpB,YAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CH,QAA7C;AACA,iBAAOA,QAAQ,CAACI,IAAT,EAAP;AACH,SAHD,MAGO;AACHF,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,OAdgB,EAcdD,IAdc,CAcTa,IAAI,IACR;AACE,eAAOA,IAAP;AACD,OAjBY,EAmBhBP,KAnBgB,CAmBV,UAASC,KAAT,EAAgB;AACrBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACD,OArBgB,CAAjB;AAsBAd,MAAAA,IAAI,CAACmB,IAAD,CAAJ;AACD,KA3BH;;AA4BE,UAAMJ,CAAC,EAAP;;AACA,QAAGhB,CAAC,CAACsB,EAAF,IAAMC,SAAT,EAAmB;AACf,UAAIpB,IAAI,GAAI,gCAA+Bf,KAAK,CAACoC,IAAN,CAAWF,EAAG,GAAzD;AAEA,UAAIG,KAAK,GAAG,MAAMpB,KAAK,CAACF,IAAD,CAAL,CAAYI,IAAZ,CAAiBC,QAAQ,IAAI;AAC/C,YAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,iBAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,SAHD,MAGO;AACHF,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,OAPiB,EAOfD,IAPe,CAOVa,IAAI,IACR;AAAC,eAAOA,IAAP;AAAY,OARC,EAUjBP,KAViB,CAUX,UAASC,KAAT,EAAgB;AACvBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACC,OAZiB,CAAlB;AAaAxB,MAAAA,cAAc,CAACkC,KAAD,CAAd;AACA1B,MAAAA,SAAS,CAAC0B,KAAK,CAAC,CAAD,CAAL,CAAS3B,MAAV,CAAT;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBrB,WAAxB;AACH;;AACH,WAAO,MAAM,CACZ,CADD;AAEH,GApDQ,EAoDN,CAACU,CAAC,CAACsB,EAAH,CApDM,CAAT;;AAuDA,QAAMI,UAAU,GAAG,MAAM;AACrBC,IAAAA,aAAa,eAAC,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE3B,CAAd;AAAiB,MAAA,MAAM,EAAG4B;AAA1B;AAAA;AAAA;AAAA;AAAA,YAAD,CAAb;AACAC,IAAAA,eAAe,CAACD,SAAD,CAAf;AACH,GAHD;;AAIA,QAAME,aAAa,GAAG,MAAM;AACxBH,IAAAA,aAAa,eAAC,QAAC,SAAD;AAAW,MAAA,MAAM,EAAGI;AAApB;AAAA;AAAA;AAAA;AAAA,YAAD,CAAb;AACAF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACAhD,IAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBiD,QAAjB,CAA0B,YAA1B;AACAjD,IAAAA,CAAC,CAAC,oBAAD,CAAD,CAAwBiD,QAAxB,CAAiC,iBAAjC;AACAjD,IAAAA,CAAC,CAAC,aAAD,CAAD,CAAiBkD,WAAjB,CAA6B,YAA7B;AACAC,IAAAA,UAAU,CAAC,MAAMnD,CAAC,CAAC,gBAAD,CAAD,CAAoBiD,QAApB,CAA6B,YAA7B,CAAP,EAAkD,IAAlD,CAAV;AACH,GAPD;;AAQA,QAAMG,kBAAkB,GAAG,YAAY;AACnC,QAAIC,MAAM,GAAG,IAAIC,MAAJ,EAAb;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACvD,CAAC,CAAC,YAAD,CAAD,CAAgBwD,MAA9B,EAAqCD,CAAC,EAAtC,EACIF,MAAM,CAACrD,CAAC,CAAC,YAAD,CAAD,CAAgBuD,CAAhB,EAAmBE,IAApB,CAAN,GAAkCzD,CAAC,CAAC,YAAD,CAAD,CAAgBuD,CAAhB,EAAmBG,KAArD;;AACJ,QAAIC,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeR,MAAf,CAAjB;AACA1B,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B+B,UAA1B;AACA,QAAItC,CAAC,GAAG,MAAMF,OAAO,EAArB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BP,CAAC,CAACe,SAA7B;AACA,QAAID,SAAS,GAAGd,CAAC,CAACe,SAAlB;AACA,QAAI0B,EAAE,GAAE,EAAR;;AACA,QAAI7B,CAAC,GAAG,YAAY;AAChB,UAAIC,GAAG,GAAG,iDAAV;AACA,UAAIb,CAAC,GAAG,MAAMF,OAAO,EAArB;AACA,YAAMgB,SAAS,GAAGd,CAAC,CAACe,SAApB;AACA,UAAIC,IAAI,GAAG,MAAMf,KAAK,CAACY,GAAD,EAAK;AACzBI,QAAAA,OAAO,EAAE;AACT,oBAAU,kBADD;AAET,0BAAgB,kBAFP;AAGT,yBAAeH;AAHN,SADgB;AAM3BZ,QAAAA,WAAW,EAAE;AANc,OAAL,CAAL,CAOdC,IAPc,CAOTC,QAAQ,IAAI;AACpB,YAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CH,QAA7C;AACA,iBAAOA,QAAQ,CAACI,IAAT,EAAP;AACH,SAHD,MAGO;AACHF,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,OAdgB,EAcdD,IAdc,CAcTa,IAAI,IACR;AACE,eAAOA,IAAP;AACD,OAjBY,EAmBhBP,KAnBgB,CAmBV,UAASC,KAAT,EAAgB;AACrBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACD,OArBgB,CAAjB;AAsBA8B,MAAAA,EAAE,GAACzB,IAAH;AACD,KA3BH;;AA4BE,UAAMJ,CAAC,EAAP;;AAEA,QAAG6B,EAAE,IAAE,aAAP,EAAqB;AAEnB,UAAI1C,IAAI,GAAG,iCAA+B0C,EAAE,CAACvB,EAAlC,GAAqC,GAAhD;AAEA,YAAMjB,KAAK,CAACF,IAAD,EAAM;AACT2C,QAAAA,MAAM,EAAE,MADC;AAETzB,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB,kBAFX;AAGL,yBAAeH;AAHV,SAFA;AAOPZ,QAAAA,WAAW,EAAE,SAPN;AAQPyC,QAAAA,IAAI,EAAEL;AARC,OAAN,CAAL,CASGnC,IATH,CASQC,QAAQ,IAAI;AACtB,YAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBH,QAAzB;AACA,iBAAOA,QAAQ,CAACI,IAAT,EAAP;AACH,SAHD,MAGO;AACHF,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,OAhBC,EAgBCD,IAhBD,CAgBMa,IAAI,IACR;AACIV,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBS,IAAtB;AACH,OAnBH,EAqBDP,KArBC,CAqBK,UAASC,KAAT,EAAgB;AACvBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACC,OAvBC,CAAN;AAwBD,KA5BD,MA6BI;AACAiC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA4BP,UAA5B;AACAhC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAmCqC,YAAY,CAACE,OAAb,CAAqB,MAArB,CAAnC;AACH;;AAEHvB,IAAAA,aAAa,eAAC,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAGwB;AAAzB;AAAA;AAAA;AAAA;AAAA,YAAD,CAAb;AACAtB,IAAAA,eAAe,CAACsB,iBAAD,CAAf;AACApE,IAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBiD,QAApB,CAA6B,YAA7B;AACAjD,IAAAA,CAAC,CAAC,4BAAD,CAAD,CAAgCiD,QAAhC,CAAyC,iBAAzC;AACAjD,IAAAA,CAAC,CAAC,gBAAD,CAAD,CAAoBkD,WAApB,CAAgC,YAAhC;AACAC,IAAAA,UAAU,CAAC,MAAMnD,CAAC,CAAC,qBAAD,CAAD,CAAyBiD,QAAzB,CAAkC,YAAlC,CAAP,EAAuD,IAAvD,CAAV;AACH,GAhFD;;AAiFA,QAAMoB,SAAS,GAAG,YAAY;AAC1B,QAAIhB,MAAM,GAAG,IAAIC,MAAJ,EAAb;AACA3B,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwC5B,CAAC,CAAC,iBAAD,CAAD,CAAqB,CAArB,CAAxC;AACAqD,IAAAA,MAAM,CAAC,WAAD,CAAN,GAAsBrD,CAAC,CAAC,iBAAD,CAAD,CAAqB,CAArB,EAAwBuC,EAA9C;AACA,QAAIoB,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeR,MAAf,CAAjB;AACA1B,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B+B,UAA1B;AACA,QAAItC,CAAC,GAAG,MAAMF,OAAO,EAArB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BP,CAAC,CAACe,SAA7B;AACA,QAAID,SAAS,GAAGd,CAAC,CAACe,SAAlB;;AACA,QAAIH,CAAC,GAAG,YAAY;AAChB,UAAIC,GAAG,GAAG,iDAAV;AACA,UAAIb,CAAC,GAAG,MAAMF,OAAO,EAArB;AACA,YAAMgB,SAAS,GAAGd,CAAC,CAACe,SAApB;AACA,UAAIC,IAAI,GAAG,MAAMf,KAAK,CAACY,GAAD,EAAK;AACzBI,QAAAA,OAAO,EAAE;AACT,oBAAU,kBADD;AAET,0BAAgB,kBAFP;AAGT,yBAAeH;AAHN,SADgB;AAM3BZ,QAAAA,WAAW,EAAE;AANc,OAAL,CAAL,CAOdC,IAPc,CAOTC,QAAQ,IAAI;AACpB,YAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CH,QAA7C;AACA,iBAAOA,QAAQ,CAACI,IAAT,EAAP;AACH,SAHD,MAGO;AACHF,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,OAdgB,EAcdD,IAdc,CAcTa,IAAI,IACR;AACE,eAAOA,IAAP;AACD,OAjBY,EAmBhBP,KAnBgB,CAmBV,UAASC,KAAT,EAAgB;AACrBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACD,OArBgB,CAAjB;AAsBA,aAAOK,IAAP;AACD,KA3BH;;AA4BE,QAAIyB,EAAE,GAAG,MAAM7B,CAAC,EAAhB;;AAEA,QAAG6B,EAAE,IAAE,aAAP,EAAqB;AACnB,UAAI1C,IAAI,GAAG,2CAAyC0C,EAAE,CAACvB,EAA5C,GAA+C,GAA1D;AAEA,YAAMjB,KAAK,CAACF,IAAD,EAAM;AACT2C,QAAAA,MAAM,EAAE,MADC;AAETzB,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB,kBAFX;AAGL,yBAAeH;AAHV,SAFA;AAOPZ,QAAAA,WAAW,EAAE,SAPN;AAQPyC,QAAAA,IAAI,EAAEL;AARC,OAAN,CAAL,CASGnC,IATH,CASQC,QAAQ,IAAI;AACtB,YAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBH,QAAzB;AACA,iBAAOA,QAAQ,CAACI,IAAT,EAAP;AACH,SAHD,MAGO;AACHF,UAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,OAhBC,EAgBCD,IAhBD,CAgBMa,IAAI,IACR;AACIV,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBS,IAAtB;AACH,OAnBH,EAqBDP,KArBC,CAqBK,UAASC,KAAT,EAAgB;AACvBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACC,OAvBC,CAAN;AAwBD,KA3BD,MA4BI;AACFiC,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAiCP,UAAjC;AACAhC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAwCqC,YAAY,CAACE,OAAb,CAAqB,WAArB,CAAxC;AACD;;AAEHvB,IAAAA,aAAa,eAAC,QAAC,aAAD;AAAe,MAAA,MAAM,EAAG0B;AAAxB;AAAA;AAAA;AAAA;AAAA,YAAD,CAAb;AACAxB,IAAAA,eAAe,CAACwB,QAAD,CAAf;AACAtE,IAAAA,CAAC,CAAC,qBAAD,CAAD,CAAyBiD,QAAzB,CAAkC,YAAlC;AACAjD,IAAAA,CAAC,CAAC,gCAAD,CAAD,CAAoCiD,QAApC,CAA6C,iBAA7C;AACAjD,IAAAA,CAAC,CAAC,qBAAD,CAAD,CAAyBkD,WAAzB,CAAqC,YAArC;AACAC,IAAAA,UAAU,CAAC,MAAMnD,CAAC,CAAC,oBAAD,CAAD,CAAwBiD,QAAxB,CAAiC,YAAjC,CAAP,EAAsD,IAAtD,CAAV;AACH,GA9ED;;AA+EA,QAAMJ,SAAS,gBACX;AAAK,IAAA,SAAS,EAAC,wDAAf;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,MAAME,aAAa,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAKA,QAAMC,YAAY,gBACd;AAAK,IAAA,SAAS,EAAC,wDAAf;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,MAAMI,kBAAkB,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAKA,QAAMgB,iBAAiB,gBACnB;AAAK,IAAA,SAAS,EAAC,wDAAf;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,OAAO,EAAE,MAAMC,SAAS,EAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAKA,QAAME,cAAc,GAAG;AACnB,iBAAa,kFADM;AAEnBC,IAAAA,QAAQ,EAAE;AAFS,GAAvB;;AAIA,QAAMF,QAAQ,gBACV;AAAK,IAAA,SAAS,EAAC,wDAAf;AAAwE,IAAA,OAAO,EAAE,MAAOG,CAAP,IAAa;AAC1F,UAAIxC,CAAC,GAAG,YAAY;AAChB,YAAIC,GAAG,GAAG,iDAAV;AACA,YAAIb,CAAC,GAAG,MAAMF,OAAO,EAArB;AACA,cAAMgB,SAAS,GAAGd,CAAC,CAACe,SAApB;AACA,YAAIC,IAAI,GAAG,MAAMf,KAAK,CAACY,GAAD,EAAK;AAC3BI,UAAAA,OAAO,EAAE;AACT,sBAAU,kBADD;AAET,4BAAgB,kBAFP;AAGT,2BAAeH;AAHN,WADkB;AAM3BZ,UAAAA,WAAW,EAAE;AANc,SAAL,CAAL,CAOdC,IAPc,CAOTC,QAAQ,IAAI;AACpB,cAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CH,QAA7C;AACA,mBAAOA,QAAQ,CAACI,IAAT,EAAP;AACH,WAHD,MAGO;AACHF,YAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,SAdgB,EAcdD,IAdc,CAcTa,IAAI,IACR;AACA,iBAAOA,IAAP;AACC,SAjBY,EAmBhBP,KAnBgB,CAmBV,UAASC,KAAT,EAAgB;AACvBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACC,SArBgB,CAAjB;AAsBAd,QAAAA,IAAI,CAACmB,IAAD,CAAJ;AACA,eAAOA,IAAP;AACH,OA5BD;;AA6BA,UAAIyB,EAAE,GAAG,MAAM7B,CAAC,EAAhB;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAuCkC,EAAvC;AACA,UAAIY,CAAC,GAAE,EAAP;;AACA,UAAGZ,EAAE,IAAE,aAAP,EAAqB;AACjB,YAAI1C,IAAI,GAAI,gCAA+B0C,EAAE,CAACrB,IAAH,CAAQF,EAAG,GAAtD;AAEA,YAAIG,KAAK,GAAG,MAAMpB,KAAK,CAACF,IAAD,CAAL,CAAYI,IAAZ,CAAiBC,QAAQ,IAAI;AAC/C,cAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACA,mBAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,WAHD,MAGO;AACHF,YAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,SAPiB,EAOfD,IAPe,CAOVa,IAAI,IACR;AAAC,iBAAOA,IAAP;AAAY,SARC,EAUjBP,KAViB,CAUX,UAASC,KAAT,EAAgB;AACvBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACC,SAZiB,CAAlB;AAaAxB,QAAAA,cAAc,CAACkC,KAAD,CAAd;AACA1B,QAAAA,SAAS,CAAC0B,KAAK,CAAC,CAAD,CAAL,CAAS3B,MAAV,CAAT;AACA2D,QAAAA,CAAC,GAAGhC,KAAK,CAAC,CAAD,CAAL,CAAS3B,MAAb;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA0Cc,KAAK,CAAC,CAAD,CAAL,CAAS3B,MAAnD;AACAV,QAAAA,KAAK,CAACsE,aAAN,CAAoBF,CAApB,eACI;AAAK,UAAA,KAAK,EAAE;AAACG,YAAAA,QAAQ,EAAC,OAAV;AAAkBC,YAAAA,KAAK,EAAC;AAAxB,WAAZ;AAAA,iCACA,QAAC,oBAAD;AAAsB,YAAA,OAAO,EAAEN,cAA/B;AAAA,mCACI,QAAC,aAAD;AACI,cAAA,KAAK,EACD;AACIO,gBAAAA,MAAM,EAAE,UADZ;AAEIC,gBAAAA,KAAK,EAAE,OAFX;AAGIF,gBAAAA,KAAK,EAAE,OAHX;AAIIG,gBAAAA,OAAO,EAAE;AAJb,eAFR;AASI,cAAA,WAAW,EAAE,CAAC3C,IAAD,EAAO4C,OAAP,KAAmB;AAE5B,uBAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AACxBC,kBAAAA,cAAc,EAAE,CACZ;AACIC,oBAAAA,MAAM,EAAE;AACJ3B,sBAAAA,KAAK,EAAE4B,MAAM,CAAC5C,KAAK,CAAC,CAAD,CAAL,CAAS3B,MAAT,CAAgBwE,kBAAjB;AADT;AADZ,mBADY;AADQ,iBAArB,CAAP;AASH,eApBL;AAqBA,cAAA,SAAS,EAAE,OAAOC,KAAP,EAAcP,OAAd,KAA0B;AACjC,oBAAIhD,CAAC,GAAG,YAAY;AAChB,sBAAIC,GAAG,GAAG,iDAAV;AACA,sBAAIb,CAAC,GAAG,MAAMF,OAAO,EAArB;AACA,wBAAMgB,SAAS,GAAGd,CAAC,CAACe,SAApB;AACA,sBAAIC,IAAI,GAAG,MAAMf,KAAK,CAACY,GAAD,EAAK;AAC3BI,oBAAAA,OAAO,EAAE;AACT,gCAAU,kBADD;AAET,sCAAgB,kBAFP;AAGT,qCAAeH;AAHN,qBADkB;AAM3BZ,oBAAAA,WAAW,EAAE;AANc,mBAAL,CAAL,CAOdC,IAPc,CAOTC,QAAQ,IAAI;AACpB,wBAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,sBAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CH,QAA7C;AACA,6BAAOA,QAAQ,CAACI,IAAT,EAAP;AACH,qBAHD,MAGO;AACHF,sBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,mBAdgB,EAcdD,IAdc,CAcTa,IAAI,IACR;AACA,2BAAOA,IAAP;AACC,mBAjBY,EAmBhBP,KAnBgB,CAmBV,UAASC,KAAT,EAAgB;AACvBJ,oBAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACC,mBArBgB,CAAjB;AAsBAd,kBAAAA,IAAI,CAACmB,IAAD,CAAJ;AACA,yBAAOA,IAAP;AACH,iBA5BD;;AA6BA,oBAAIyB,EAAE,GAAG,MAAM7B,CAAC,EAAhB;;AACA,oBAAG6B,EAAE,IAAI,aAAT,EAAuB;AACnB,sBAAI1C,IAAI,GAAG,yCAAX;AACA,sBAAIC,CAAC,GAAG,MAAMF,OAAO,EAArB;AACA,wBAAMgB,SAAS,GAAGd,CAAC,CAACe,SAApB;AACA,sBAAIC,IAAI,GAAG,MAAMf,KAAK,CAACF,IAAD,EAAM;AACpB2C,oBAAAA,MAAM,EAAE,MADY;AAEpBzB,oBAAAA,OAAO,EAAE;AACL,gCAAU,kBADL;AAEL,sCAAgB,kBAFX;AAGL,qCAAeH;AAHV,qBAFW;AAOpBZ,oBAAAA,WAAW,EAAE,SAPO;AAQpByC,oBAAAA,IAAI,EAAEJ,IAAI,CAACC,SAAL,CAAe;AAAC,+BAAQ,IAAT;AAAc,4BAAKC,EAAE,CAACrB,IAAH,CAAQF;AAA3B,qBAAf;AARc,mBAAN,CAAL,CASVf,IATU,CASLC,QAAQ,IAAI;AACpB,wBAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,sBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBH,QAAzB;AACA,6BAAOA,QAAQ,CAACI,IAAT,EAAP;AACH,qBAHD,MAGO;AACHF,sBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,mBAhBY,EAgBVD,IAhBU,CAgBLa,IAAI,IACR;AACIV,oBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBS,IAAtB;AACH,mBAnBQ,EAqBZP,KArBY,CAqBN,UAASC,KAAT,EAAgB;AACvBJ,oBAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACC,mBAvBY,CAAjB;AAwBH,iBA5BD,MA6BI;AACA,sBAAIZ,IAAI,GAAG,yCAAX;AACA,sBAAIC,CAAC,GAAG,MAAMF,OAAO,EAArB;AACA,sBAAIsB,IAAI,GAAGmB,IAAI,CAAC6B,KAAL,CAAWxB,YAAY,CAACE,OAAb,CAAqB,MAArB,CAAX,CAAX;AACA,sBAAIuB,QAAQ,GAAGzB,YAAY,CAACE,OAAb,CAAqB,QAArB,CAAf;AACA,sBAAIwB,GAAG,GAAG/B,IAAI,CAAC6B,KAAL,CAAWC,QAAX,CAAV;AACA,sBAAIzD,CAAC,GAAG,EAAR;;AACA,sBAAGyD,QAAQ,IAAE,IAAV,IAAkBA,QAAQ,IAAElD,SAA/B,EAAyC;AACrC,yBAAI,IAAIe,CAAR,IAAaoC,GAAb,EAAiB;AACbhE,sBAAAA,OAAO,CAACC,GAAR,CAAY+D,GAAG,CAACpC,CAAD,CAAf;AACAtB,sBAAAA,CAAC,CAAC2D,IAAF,CAAOD,GAAG,CAACpC,CAAD,CAAH,CAAOhB,EAAd;AACH;AAEJ;;AACDZ,kBAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA4CK,CAA5C;AACA,wBAAME,SAAS,GAAGd,CAAC,CAACe,SAApB;AACA,sBAAIC,IAAI,GAAG,MAAMf,KAAK,CAACF,IAAD,EAAM;AACpB2C,oBAAAA,MAAM,EAAE,MADY;AAEpBzB,oBAAAA,OAAO,EAAE;AACL,gCAAU,kBADL;AAEL,sCAAgB,kBAFX;AAGL,qCAAeH;AAHV,qBAFW;AAOpBZ,oBAAAA,WAAW,EAAE,SAPO;AAQpByC,oBAAAA,IAAI,EAAEJ,IAAI,CAACC,SAAL,CAAe;AACjB,+BAAS,KADQ;AAEjB,8BAAQpB,IAAI,CAACoD,IAFI;AAGjB,gCAAUpD,IAAI,CAACqD,MAHE;AAIjB,6BAAOrD,IAAI,CAACsD,GAJK;AAKjB,+BAAStD,IAAI,CAACuD,KALG;AAMjB,iCAAUvD,IAAI,CAACwD,OANE;AAOjB,+BAAQxD,IAAI,CAACyD,KAPI;AAQjB,8BAAOzD,IAAI,CAAC0D,IARK;AASjB,4BAAK1D,IAAI,CAAC2D,EATO;AAUjB,mCAAY3D,IAAI,CAAC4D,SAVA;AAWjB,mCAAYxF,SAXK;AAYjB,kCAAYoB;AAZK,qBAAf;AARc,mBAAN,CAAL,CAuBVT,IAvBU,CAuBLC,QAAQ,IAAI;AACpB,wBAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,sBAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBH,QAAzB;AACA,6BAAOA,QAAQ,CAACI,IAAT,EAAP;AACH,qBAHD,MAGO;AACHF,sBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,mBA9BY,EA8BVD,IA9BU,CA8BLa,IAAI,IACR;AACIV,oBAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBS,IAAtB;AACH,mBAjCQ,EAmCZP,KAnCY,CAmCN,UAASC,KAAT,EAAgB;AACvBJ,oBAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACC,mBArCY,CAAjB;AAsCH;;AACG1B,gBAAAA,QAAQ,CAAC,GAAD,CAAR;AACAD,gBAAAA,KAAK,CAACiG,eAAN,eACA;AAAK,kBAAA,SAAS,EAAC,8DAAf;AAAA,0CACI;AAAI,oBAAA,SAAS,EAAC,SAAd;AAAA,0CAAgCxC,EAAE,CAACrB,IAAH,CAAQ8D,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAG,oBAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAG,oBAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII;AAAK,oBAAA,SAAS,EAAC,SAAf;AAAyB,oBAAA,GAAG,EAAEjH,OAA9B;AAAuC,oBAAA,GAAG,EAAC,EAA3C;AAA8C,oBAAA,KAAK,EAAE;AAACsF,sBAAAA,QAAQ,EAAC,OAAV;AAAkB4B,sBAAAA,SAAS,EAAC;AAA5B;AAArD;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA;AAQAjH,gBAAAA,IAAI,CAACkH,IAAL,CAAU,UAAV,EAAqB;AAACC,kBAAAA,OAAO,EAAE,CAAV;AAAaC,kBAAAA,KAAK,EAAE,CAApB;AAAuBC,kBAAAA,QAAQ,EAAE,GAAjC;AAAsCC,kBAAAA,OAAO,EAAE,GAA/C;AAAoDC,kBAAAA,KAAK,EAAC;AAA1D,iBAArB;AAEP;AAnJD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ;AA2JH,OA/KD,MAgLI;AAEA,YAAI5E,GAAG,GAAI,iCAAX;AACA,YAAIwD,QAAQ,GAAGzB,YAAY,CAACE,OAAb,CAAqB,QAArB,CAAf;AACA,YAAIwB,GAAG,GAAG/B,IAAI,CAAC6B,KAAL,CAAWC,QAAX,CAAV;AACA/D,QAAAA,OAAO,CAACC,GAAR,CAAY+D,GAAZ;AACA,YAAIhC,UAAU,GAAG,IAAIL,MAAJ,EAAjB;AACA,YAAIrB,CAAC,GAAG,EAAR;;AACA,YAAGyD,QAAQ,IAAE,IAAV,IAAkBA,QAAQ,IAAElD,SAA/B,EAAyC;AACrC,eAAI,IAAIe,CAAR,IAAaoC,GAAb,EAAiB;AACbhE,YAAAA,OAAO,CAACC,GAAR,CAAY+D,GAAG,CAACpC,CAAD,CAAf;AACAtB,YAAAA,CAAC,CAAC2D,IAAF,CAAOD,GAAG,CAACpC,CAAD,CAAH,CAAOhB,EAAd;AACH;AAEJ;;AACDZ,QAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA4CK,CAA5C;AACA0B,QAAAA,UAAU,CAAC,IAAD,CAAV,GAAiB1B,CAAjB;AACAN,QAAAA,OAAO,CAACC,GAAR,CAAY+B,UAAZ;AACAA,QAAAA,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeF,UAAf,CAAb;AACA,YAAItB,IAAI,GAAG,MAAMf,KAAK,CAACY,GAAD,EAAK;AACvB6B,UAAAA,MAAM,EAAE,MADe;AAEvBzB,UAAAA,OAAO,EAAE;AACL,sBAAU,kBADL;AAEL,4BAAgB;AAFX,WAFc;AAMrB0B,UAAAA,IAAI,EAAEL;AANe,SAAL,CAAL,CAOZnC,IAPY,CAOPC,QAAQ,IAAI;AACtB,cAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,YAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,mBAAOH,QAAQ,CAACI,IAAT,EAAP;AACH,WAHD,MAGO;AACHF,YAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,SAdgB,EAcdD,IAdc,CAcTa,IAAI,IACR;AAAC,iBAAOA,IAAP;AAAY,SAfA,EAiBhBP,KAjBgB,CAiBV,UAASC,KAAT,EAAgB;AACvBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACC,SAnBgB,CAAjB;AAoBAhB,QAAAA,SAAS,CAACqB,IAAD,CAAT;AACA,YAAI0E,EAAE,GAAG,CAAT;;AACA,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC3E,IAAI,CAACmB,MAApB,EAA2BwD,CAAC,EAA5B,EACID,EAAE,GAAGA,EAAE,GAAG1E,IAAI,CAAC2E,CAAD,CAAJ,CAAQC,IAAlB;;AACJtF,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAA+CmF,EAA/C;AACArG,QAAAA,YAAY,CAACqG,EAAD,CAAZ;AACA,YAAIG,KAAK,GAAGjD,YAAY,CAACE,OAAb,CAAqB,WAArB,CAAZ;AACA+C,QAAAA,KAAK,GAAGtD,IAAI,CAAC6B,KAAL,CAAWyB,KAAX,EAAkBrG,SAA1B;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCsF,KAAtC;AACA,YAAIC,OAAO,GAAI,+CAA8CD,KAAM,GAAnE;AACA,YAAIE,OAAO,GAAG,MAAM9F,KAAK,CAAC6F,OAAD,CAAL,CAAe3F,IAAf,CAChBH,CAAC,IAAI;AACD,cAAGA,CAAC,CAACK,EAAL,EAAS;AACLC,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,mBAAOP,CAAC,CAACQ,IAAF,EAAP;AACH,WAHD,MAGO;AACHF,YAAAA,OAAO,CAACC,GAAR,CAAYP,CAAZ,EAAc,4BAAd;AACH;AACJ,SARe,EAQbG,IARa,CASZa,IAAI,IAAI;AACJ,iBAAOA,IAAP;AACH,SAXW,EAWTP,KAXS,CAWH,UAASC,KAAT,EAAgB;AACrBJ,UAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACH,SAbW,CAApB;AAcAL,QAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAuDwF,OAAvD;AACAtG,QAAAA,YAAY,CAACsG,OAAD,CAAZ;AACAxG,QAAAA,QAAQ,CAACmG,EAAE,GAACK,OAAO,CAACH,IAAZ,CAAR;AACA5G,QAAAA,KAAK,CAACsE,aAAN,CAAoBF,CAApB,eACI;AAAK,UAAA,KAAK,EAAE;AAACG,YAAAA,QAAQ,EAAC,OAAV;AAAkBC,YAAAA,KAAK,EAAC;AAAxB,WAAZ;AAAA,iCACA,QAAC,oBAAD;AAAsB,YAAA,OAAO,EAAEN,cAA/B;AAAA,mCACI,QAAC,aAAD;AACI,cAAA,KAAK,EACD;AACIO,gBAAAA,MAAM,EAAE,UADZ;AAEIC,gBAAAA,KAAK,EAAE,OAFX;AAGIF,gBAAAA,KAAK,EAAE,OAHX;AAIIG,gBAAAA,OAAO,EAAE;AAJb,eAFR;AASI,cAAA,WAAW,EAAE,CAAC3C,IAAD,EAAO4C,OAAP,KAAmB;AAE5B,uBAAOA,OAAO,CAACC,KAAR,CAAcC,MAAd,CAAqB;AACxBC,kBAAAA,cAAc,EAAE,CACZ;AACIC,oBAAAA,MAAM,EAAE;AACJ3B,sBAAAA,KAAK,EAAEqD,EAAE,GAACK,OAAO,CAACH;AADd;AADZ,mBADY;AADQ,iBAArB,CAAP;AASH,eApBL;AAqBA,cAAA,SAAS,EAAE,OAAOzB,KAAP,EAAcP,OAAd,KAA0B;AACjC,oBAAIhD,CAAC,GAAG,YAAY;AAChB,sBAAIC,GAAG,GAAG,iDAAV;AACA,sBAAIb,CAAC,GAAG,MAAMF,OAAO,EAArB;AACA,wBAAMgB,SAAS,GAAGd,CAAC,CAACe,SAApB;AACA,sBAAIC,IAAI,GAAG,MAAMf,KAAK,CAACY,GAAD,EAAK;AAC3BI,oBAAAA,OAAO,EAAE;AACT,gCAAU,kBADD;AAET,sCAAgB,kBAFP;AAGT,qCAAeH;AAHN,qBADkB;AAM3BZ,oBAAAA,WAAW,EAAE;AANc,mBAAL,CAAL,CAOdC,IAPc,CAOTC,QAAQ,IAAI;AACpB,wBAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,sBAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CH,QAA7C;AACA,6BAAOA,QAAQ,CAACI,IAAT,EAAP;AACH,qBAHD,MAGO;AACHF,sBAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,mBAdgB,EAcdD,IAdc,CAcTa,IAAI,IACR;AACA,2BAAOA,IAAP;AACC,mBAjBY,EAmBhBP,KAnBgB,CAmBV,UAASC,KAAT,EAAgB;AACvBJ,oBAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACC,mBArBgB,CAAjB;AAsBAd,kBAAAA,IAAI,CAACmB,IAAD,CAAJ;AACA,yBAAOA,IAAP;AACH,iBA5BD;;AA6BA,oBAAIyB,EAAE,GAAG,MAAM7B,CAAC,EAAhB;AACI3B,gBAAAA,QAAQ,CAAC,GAAD,CAAR;AACAD,gBAAAA,KAAK,CAACiG,eAAN,eACA;AAAK,kBAAA,SAAS,EAAC,8DAAf;AAAA,0CACI;AAAI,oBAAA,SAAS,EAAC,SAAd;AAAA,0CAAgCxC,EAAE,CAACrB,IAAH,CAAQ8D,UAAxC;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAG,oBAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFJ,eAGI;AAAG,oBAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ,eAII;AAAK,oBAAA,SAAS,EAAC,SAAf;AAAyB,oBAAA,GAAG,EAAEjH,OAA9B;AAAuC,oBAAA,GAAG,EAAC,EAA3C;AAA8C,oBAAA,KAAK,EAAE;AAACsF,sBAAAA,QAAQ,EAAC,OAAV;AAAkB4B,sBAAAA,SAAS,EAAC;AAA5B;AAArD;AAAA;AAAA;AAAA;AAAA,0BAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA;AAQAjH,gBAAAA,IAAI,CAACkH,IAAL,CAAU,UAAV,EAAqB;AAACC,kBAAAA,OAAO,EAAE,CAAV;AAAaC,kBAAAA,KAAK,EAAE,CAApB;AAAuBC,kBAAAA,QAAQ,EAAE,GAAjC;AAAsCC,kBAAAA,OAAO,EAAE,GAA/C;AAAoDC,kBAAAA,KAAK,EAAC;AAA1D,iBAArB;AAGP;AAhED;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ;AAyEH;AACA,KA7VL;AAAA,2BA8VI;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9VJ;AAAA;AAAA;AAAA;AAAA,UADJ;;AAkWA,QAAM,CAACO,UAAD,EAAYzE,aAAZ,IAA6BxD,QAAQ,eAAC,QAAC,MAAD;AAAQ,IAAA,IAAI,EAAE6B,CAAd;AAAiB,IAAA,MAAM,EAAE4B;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAD,CAA3C;AACA,QAAM,CAACyE,YAAD,EAAcxE,eAAd,IAAiC1D,QAAQ,CAACyD,SAAD,CAA/C;AACA,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAEF,UAArB;AAAiC,QAAA,WAAW,EAAEI,aAA9C;AAA6D,QAAA,gBAAgB,EAAEK,kBAA/E;AAAmG,QAAA,eAAe,EAAEiB,SAApH;AAAgI,QAAA,MAAM,EAAEiD;AAAxI;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA,kBACCD;AADD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAUH,CAhoBD;;GAAMjH,a;UACaV,W;;;KADbU,a;AAkoBN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport payment from './assets/img/payment.jpg'\r\nimport { gsap } from \"gsap\";\r\nimport { Outlet, Link, useNavigate } from 'react-router-dom';\r\nimport Choixlivraison from './components/ChoixLivraison';\r\nimport Commanderecap from './components/CommandeRecap';\r\nimport Livraison from './components/Livraison';\r\nimport Panier from './components/Panier';\r\nimport Stepbarre from './components/StepBarre';\r\nimport $ from 'jquery';\r\nimport Payementchoix from './components/PayementChoix';\r\nimport { PayPalScriptProvider, PayPalButtons } from \"@paypal/react-paypal-js\";\r\n\r\n\r\nconst Panierprocess = (props) => {\r\n    let navigate = useNavigate();\r\n    const [panierItems, setPanieritems] = useState([''])\r\n    const [sousTotal,setSoustotal] = useState('')\r\n    const [total,setTotal] = useState('')\r\n    const [livraison,setLivraison] = useState(null)\r\n    const [panier,setPanier] = useState('')\r\n    const [u,setU] = useState('')\r\n    const getCSRF = async () => {\r\n    var url2 = \"http://localhost:8000/csrf/\"\r\n    let r = '' \r\n    await fetch(url2, {\r\n        credentials: 'include',\r\n      }).then(response => {\r\n        if(response.ok) {\r\n            console.log(\"fetchCSRF panier process\")\r\n            r = response.json();\r\n        } else {\r\n            console.log(response,'Mauvaise réponse du réseau');\r\n        }\r\n        })\r\n        .catch(function(error) {\r\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n        });\r\n    return r\r\n    }\r\n\r\n    console.log('props ppp produit',props)\r\n    useEffect(async () => {\r\n        let t = async () => {\r\n            var url = \"http://localhost:8000/current_user/?format=json\"\r\n            let r = await getCSRF()\r\n            const csrftoken = r.csrfToken\r\n            let data = await fetch(url,{                \r\n              headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'X-CSRFToken': csrftoken\r\n            }, \r\n            credentials: 'include',\r\n            }).then(response => {\r\n            if(response.ok) {\r\n                console.log(\"current_user de panier process\",response)\r\n                return response.json();\r\n            } else {\r\n                console.log(response,'Mauvaise réponse du réseau');\r\n            }\r\n            }).then(data => \r\n                {\r\n                  return(data)\r\n                }\r\n                )\r\n            .catch(function(error) {\r\n              console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n            });\r\n            setU(data)\r\n          }\r\n          await t()\r\n          if(u.id!=undefined){\r\n              var url2 = `http://localhost:8000/panier/${props.user.id}/`\r\n    \r\n              let data2 = await fetch(url2).then(response => {\r\n              if(response.ok) {\r\n                  console.log(\"fetch panier panier process\")\r\n                  return response.json();\r\n              } else {\r\n                  console.log(response,'Mauvaise réponse du réseau');\r\n              }\r\n              }).then(data => \r\n                  {return data}\r\n                  )\r\n              .catch(function(error) {\r\n              console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n              });\r\n              setPanieritems(data2)\r\n              setPanier(data2[0].panier)\r\n              console.log(\"ddata1151\",panierItems)\r\n          }\r\n        return () => {\r\n        };\r\n    }, [u.id]);\r\n\r\n\r\n    const goToPanier = () => {\r\n        setPanierStep(<Panier user={u} button={ btnPanier }/>)\r\n        setStepBarreBtn(btnPanier)\r\n    }\r\n    const goToLivraison = () => {\r\n        setPanierStep(<Livraison button={ btnLivraison }/>)\r\n        setStepBarreBtn(btnLivraison)\r\n        $(\"#stepPanier\").addClass('stepValide')\r\n        $(\"#panierToLivraison\").addClass(\"stepStateActive\")\r\n        $(\"#stepPanier\").removeClass(\"stepActive\")\r\n        setTimeout(() => $(\"#stepLivraison\").addClass('stepActive'),1000)\r\n    }\r\n    const goToChoixLivraison = async () => {\r\n        let inputs = new Object()\r\n        for(let i=0;i<$(\".inputform\").length;i++)\r\n            inputs[$(\".inputform\")[i].name] = $(\".inputform\")[i].value\r\n        var inputsForm = JSON.stringify(inputs);\r\n        console.log('entrer:::::',inputsForm)\r\n        let r = await getCSRF()\r\n        console.log(\"csrftoken OK\",r.csrfToken)\r\n        let csrftoken = r.csrfToken\r\n        let us =''\r\n        let t = async () => {\r\n            var url = \"http://localhost:8000/current_user/?format=json\"\r\n            let r = await getCSRF()\r\n            const csrftoken = r.csrfToken\r\n            let data = await fetch(url,{                \r\n              headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'X-CSRFToken': csrftoken\r\n            }, \r\n            credentials: 'include',\r\n            }).then(response => {\r\n            if(response.ok) {\r\n                console.log(\"current_user de panier process\",response)\r\n                return response.json();\r\n            } else {\r\n                console.log(response,'Mauvaise réponse du réseau');\r\n            }\r\n            }).then(data => \r\n                {\r\n                  return(data)\r\n                }\r\n                )\r\n            .catch(function(error) {\r\n              console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n            });\r\n            us=data\r\n          }\r\n          await t()\r\n\r\n          if(us!='rien trouvé'){\r\n\r\n            var url2 = \"http://localhost:8000/users/\"+us.id+\"/\"\r\n\r\n            await fetch(url2,{\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'X-CSRFToken': csrftoken\r\n                      }, \r\n                      credentials: 'include',\r\n                      body: inputsForm\r\n                  }).then(response => {\r\n                if(response.ok) {\r\n                    console.log(\"fetchLogin\",response)\r\n                    return response.json();\r\n                } else {\r\n                    console.log(response,'Mauvaise réponse du réseau');\r\n                }\r\n                }).then(data => \r\n                    {\r\n                        console.log(\"reponse\",data)\r\n                    }\r\n                    )\r\n                .catch(function(error) {\r\n                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                });\r\n          }\r\n          else{\r\n              localStorage.setItem('user',inputsForm)\r\n              console.log('user coooooooookie' , localStorage.getItem('user'))\r\n          }\r\n\r\n        setPanierStep(<Choixlivraison button={ btnChoixLivraison }/>)\r\n        setStepBarreBtn(btnChoixLivraison)\r\n        $(\"#stepLivraison\").addClass('stepValide')\r\n        $(\"#livraisonToChoixLivraison\").addClass(\"stepStateActive\")\r\n        $(\"#stepLivraison\").removeClass(\"stepActive\")\r\n        setTimeout(() => $(\"#stepChoixLivraison\").addClass('stepActive'),1000)\r\n    }\r\n    const goToRecap = async () => {\r\n        let inputs = new Object()\r\n        console.log('le choix de la livraison:',$(\".livChoixActive\")[0])\r\n        inputs[\"livraison\"] = $(\".livChoixActive\")[0].id\r\n        var inputsForm = JSON.stringify(inputs);\r\n        console.log('entrer:::::',inputsForm)\r\n        let r = await getCSRF()\r\n        console.log(\"csrftoken OK\",r.csrfToken)\r\n        let csrftoken = r.csrfToken\r\n        let t = async () => {\r\n            var url = \"http://localhost:8000/current_user/?format=json\"\r\n            let r = await getCSRF()\r\n            const csrftoken = r.csrfToken\r\n            let data = await fetch(url,{                \r\n              headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json',\r\n              'X-CSRFToken': csrftoken\r\n            }, \r\n            credentials: 'include',\r\n            }).then(response => {\r\n            if(response.ok) {\r\n                console.log(\"current_user de panier process\",response)\r\n                return response.json();\r\n            } else {\r\n                console.log(response,'Mauvaise réponse du réseau');\r\n            }\r\n            }).then(data => \r\n                {\r\n                  return(data)\r\n                }\r\n                )\r\n            .catch(function(error) {\r\n              console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n            });\r\n            return data\r\n          }\r\n          let us = await t()\r\n          \r\n          if(us!='rien trouvé'){\r\n            var url2 = \"http://localhost:8000/choix-livraison/\"+us.id+\"/\"\r\n\r\n            await fetch(url2,{\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                        'X-CSRFToken': csrftoken\r\n                      }, \r\n                      credentials: 'include',\r\n                      body: inputsForm\r\n                  }).then(response => {\r\n                if(response.ok) {\r\n                    console.log(\"fetchLogin\",response)\r\n                    return response.json();\r\n                } else {\r\n                    console.log(response,'Mauvaise réponse du réseau');\r\n                }\r\n                }).then(data => \r\n                    {\r\n                        console.log(\"reponse\",data)\r\n                    }\r\n                    )\r\n                .catch(function(error) {\r\n                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                });\r\n          }\r\n          else{\r\n            localStorage.setItem('livraison',inputsForm)\r\n            console.log('livraison coooooooookie' , localStorage.getItem('livraison'))\r\n          }\r\n\r\n        setPanierStep(<Commanderecap button={ btnPayer }/>)\r\n        setStepBarreBtn(btnPayer)\r\n        $(\"#stepChoixLivraison\").addClass('stepValide')\r\n        $(\"#choixLivraisonToRecapCommande\").addClass(\"stepStateActive\")\r\n        $(\"#stepChoixLivraison\").removeClass(\"stepActive\")\r\n        setTimeout(() => $(\"#stepRecapCommande\").addClass('stepActive'),1000)\r\n    }\r\n    const btnPanier = (\r\n        <div className=\"w-100 d-flex align-items-center justify-content-center\">\r\n            <button className=\"produitBuyBtn\" onClick={() => goToLivraison()} >Valider mon panier</button>\r\n        </div>\r\n    )\r\n    const btnLivraison = (\r\n        <div className=\"w-100 d-flex align-items-center justify-content-center\">\r\n            <button className=\"produitBuyBtn\" onClick={() => goToChoixLivraison()} >Confirmer les informations</button>\r\n        </div>\r\n    )\r\n    const btnChoixLivraison = (\r\n        <div className=\"w-100 d-flex align-items-center justify-content-center\">\r\n            <button className=\"produitBuyBtn\" onClick={() => goToRecap()} >Choisir ce mode de livraison</button>\r\n        </div>\r\n    )\r\n    const initialOptions = {\r\n        \"client-id\": \"ASFEAZSj8J9EWXzFzTRIqT9Frn3FONIEgXx87hRWxhJyCSv7_SshAkT1TW0OSjTySDAb4cEXdVW7olO3\",\r\n        currency: \"EUR\",\r\n    };\r\n    const btnPayer = (\r\n        <div className=\"w-100 d-flex align-items-center justify-content-center\" onClick={async (e) => {     \r\n            let t = async () => {\r\n                var url = \"http://localhost:8000/current_user/?format=json\"\r\n                let r = await getCSRF()\r\n                const csrftoken = r.csrfToken\r\n                let data = await fetch(url,{                \r\n                headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'X-CSRFToken': csrftoken\r\n                }, \r\n                credentials: 'include',\r\n                }).then(response => {\r\n                if(response.ok) {\r\n                    console.log(\"current_user de panier process\",response)\r\n                    return response.json();\r\n                } else {\r\n                    console.log(response,'Mauvaise réponse du réseau');\r\n                }\r\n                }).then(data => \r\n                    {\r\n                    return(data)\r\n                    }\r\n                    )\r\n                .catch(function(error) {\r\n                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                });\r\n                setU(data)\r\n                return(data)\r\n            }\r\n            let us = await t()\r\n            console.log(\"########################\",us)\r\n            let p =\"\"\r\n            if(us!='rien trouvé'){\r\n                var url2 = `http://localhost:8000/panier/${us.user.id}/`\r\n        \r\n                let data2 = await fetch(url2).then(response => {\r\n                if(response.ok) {\r\n                    console.log(\"fetch panier panier process\")\r\n                    return response.json();\r\n                } else {\r\n                    console.log(response,'Mauvaise réponse du réseau');\r\n                }\r\n                }).then(data => \r\n                    {return data}\r\n                    )\r\n                .catch(function(error) {\r\n                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                });\r\n                setPanieritems(data2)\r\n                setPanier(data2[0].panier)\r\n                p = data2[0].panier\r\n                console.log(\"ddata1151******************\",data2[0].panier)\r\n                props.showHideModal(e,\r\n                    <div style={{maxWidth:'400px',width:'100vh'}}>\r\n                    <PayPalScriptProvider options={initialOptions}>\r\n                        <PayPalButtons \r\n                            style={\r\n                                { \r\n                                    layout: \"vertical\", \r\n                                    color: 'black',\r\n                                    width: \"500px\",   \r\n                                    Tagline: false \r\n                                }\r\n                            }\r\n                            createOrder={(data, actions) => {\r\n                                \r\n                                return actions.order.create({\r\n                                    purchase_units: [\r\n                                        {\r\n                                            amount: {\r\n                                                value: String(data2[0].panier.totalaveclivraison),\r\n                                            },\r\n                                        },\r\n                                    ],\r\n                                });\r\n                            }}\r\n                        onApprove={async (datas, actions) => {\r\n                            let t = async () => {\r\n                                var url = \"http://localhost:8000/current_user/?format=json\"\r\n                                let r = await getCSRF()\r\n                                const csrftoken = r.csrfToken\r\n                                let data = await fetch(url,{                \r\n                                headers: {\r\n                                'Accept': 'application/json',\r\n                                'Content-Type': 'application/json',\r\n                                'X-CSRFToken': csrftoken\r\n                                }, \r\n                                credentials: 'include',\r\n                                }).then(response => {\r\n                                if(response.ok) {\r\n                                    console.log(\"current_user de panier process\",response)\r\n                                    return response.json();\r\n                                } else {\r\n                                    console.log(response,'Mauvaise réponse du réseau');\r\n                                }\r\n                                }).then(data => \r\n                                    {\r\n                                    return(data)\r\n                                    }\r\n                                    )\r\n                                .catch(function(error) {\r\n                                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                                });\r\n                                setU(data)\r\n                                return(data)\r\n                            }\r\n                            let us = await t()\r\n                            if(us != 'rien trouvé'){\r\n                                var url2 = \"http://localhost:8000/commande-success/\"\r\n                                let r = await getCSRF()\r\n                                const csrftoken = r.csrfToken\r\n                                let data = await fetch(url2,{\r\n                                        method: 'POST',\r\n                                        headers: {\r\n                                            'Accept': 'application/json',\r\n                                            'Content-Type': 'application/json',\r\n                                            'X-CSRFToken': csrftoken\r\n                                        }, \r\n                                        credentials: 'include',\r\n                                        body: JSON.stringify({'login':true,'id':us.user.id})\r\n                                    }).then(response => {\r\n                                    if(response.ok) {\r\n                                        console.log(\"fetchLogin\",response)\r\n                                        return response.json();\r\n                                    } else {\r\n                                        console.log(response,'Mauvaise réponse du réseau');\r\n                                    }\r\n                                    }).then(data => \r\n                                        {\r\n                                            console.log(\"reponse\",data)\r\n                                        }\r\n                                        )\r\n                                    .catch(function(error) {\r\n                                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                                    });\r\n                            }\r\n                            else{\r\n                                var url2 = \"http://localhost:8000/commande-success/\"\r\n                                let r = await getCSRF()\r\n                                let user = JSON.parse(localStorage.getItem('user'))\r\n                                let produits = localStorage.getItem('panier')\r\n                                var obj = JSON.parse(produits);\r\n                                let t = []\r\n                                if(produits!=null || produits!=undefined){\r\n                                    for(var i in obj){\r\n                                        console.log(obj[i]);\r\n                                        t.push(obj[i].id)                    \r\n                                    }\r\n                \r\n                                }\r\n                                console.log('ttttttttttttttttttttttttttttt',t)\r\n                                const csrftoken = r.csrfToken\r\n                                let data = await fetch(url2,{\r\n                                        method: 'POST',\r\n                                        headers: {\r\n                                            'Accept': 'application/json',\r\n                                            'Content-Type': 'application/json',\r\n                                            'X-CSRFToken': csrftoken\r\n                                        }, \r\n                                        credentials: 'include',\r\n                                        body: JSON.stringify({\r\n                                            'login': false,\r\n                                            'sexe': user.sexe,\r\n                                            'prenom': user.prenom,\r\n                                            'nom': user.nom,\r\n                                            'email': user.email,\r\n                                            'adresse':user.adresse,\r\n                                            'ville':user.ville,\r\n                                            'pays':user.pays,\r\n                                            'cp':user.cp,\r\n                                            'telephone':user.telephone,\r\n                                            'livraison':livraison,\r\n                                            'produits': t\r\n\r\n                                        })\r\n                                    }).then(response => {\r\n                                    if(response.ok) {\r\n                                        console.log(\"fetchLogin\",response)\r\n                                        return response.json();\r\n                                    } else {\r\n                                        console.log(response,'Mauvaise réponse du réseau');\r\n                                    }\r\n                                    }).then(data => \r\n                                        {\r\n                                            console.log(\"reponse\",data)\r\n                                        }\r\n                                        )\r\n                                    .catch(function(error) {\r\n                                    console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                                    });\r\n                            }\r\n                                navigate('/')\r\n                                props.setModalcontent(\r\n                                <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                    <h3 className='modline'>Merci, {us.user.first_name}, pour votre commande !</h3>\r\n                                    <p className='modline'>Votre commande a été réalisé avec succés, nous venons de vous envoyer un email avec le detail de vos achats.</p>\r\n                                    <p className=\"modline\">Nous vous contacterons par email pour vous fournir les informations relative à votre commande.</p>\r\n                                    <img className='modline' src={payment} alt=\"\" style={{maxWidth:'400px',objectFit:'contain',}} />\r\n                                    \r\n                                </div>)\r\n                                gsap.from(\".modline\",{opacity: 0, scale: 0, duration: 0.4, stagger: 0.4, delay:0.5})\r\n                            \r\n                        }} />\r\n                    </PayPalScriptProvider>\r\n                    </div>\r\n                \r\n                )\r\n            }\r\n            else{\r\n                 \r\n                var url = `http://localhost:8000/panier/0/`\r\n                let produits = localStorage.getItem('panier')\r\n                var obj = JSON.parse(produits);\r\n                console.log(obj)\r\n                let inputsForm = new Object\r\n                let t = []\r\n                if(produits!=null || produits!=undefined){\r\n                    for(var i in obj){\r\n                        console.log(obj[i]);\r\n                        t.push(obj[i].id)                    \r\n                    }\r\n    \r\n                }\r\n                console.log('ttttttttttttttttttttttttttttt',t)\r\n                inputsForm['id']=t\r\n                console.log(inputsForm)\r\n                inputsForm = JSON.stringify(inputsForm)\r\n                let data = await fetch(url,{\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                      },\r\n                      body: inputsForm\r\n                  }).then(response => {\r\n                if(response.ok) {\r\n                    console.log(\"fetch\")\r\n                    return response.json();\r\n                } else {\r\n                    console.log(response,'Mauvaise réponse du réseau');\r\n                }\r\n                }).then(data => \r\n                    {return data}\r\n                    )\r\n                .catch(function(error) {\r\n                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                });\r\n                setPanier(data)\r\n                let st = 0\r\n                for(let d=0; d<data.length;d++)\r\n                    st = st + data[d].prix\r\n                console.log('stststststststststststststststst',st)\r\n                setSoustotal(st)\r\n                let livid = localStorage.getItem('livraison')\r\n                livid = JSON.parse(livid).livraison\r\n                console.log('lllllllllllllllllllllll',livid)\r\n                let url_liv = `http://localhost:8000/choix-livraison-nolog/${livid}/`\r\n                let dataliv = await fetch(url_liv).then(\r\n                    r => {\r\n                        if(r.ok) {\r\n                            console.log(\"fetchLivraison\")\r\n                            return r.json();\r\n                        } else {\r\n                            console.log(r,'Mauvaise réponse du réseau');\r\n                        }\r\n                    }).then(\r\n                        data => {\r\n                            return data\r\n                        }).catch(function(error) {\r\n                            console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                        });\r\n                console.log('zevjmobevuebuvebveuv51333333333333333333',dataliv)\r\n                setLivraison(dataliv)\r\n                setTotal(st+dataliv.prix)\r\n                props.showHideModal(e,\r\n                    <div style={{maxWidth:'400px',width:'100vh'}}>\r\n                    <PayPalScriptProvider options={initialOptions}>\r\n                        <PayPalButtons \r\n                            style={\r\n                                { \r\n                                    layout: \"vertical\", \r\n                                    color: 'black',\r\n                                    width: \"500px\",   \r\n                                    Tagline: false \r\n                                }\r\n                            }\r\n                            createOrder={(data, actions) => {\r\n                                \r\n                                return actions.order.create({\r\n                                    purchase_units: [\r\n                                        {\r\n                                            amount: {\r\n                                                value: st+dataliv.prix,\r\n                                            },\r\n                                        },\r\n                                    ],\r\n                                });\r\n                            }}\r\n                        onApprove={async (datas, actions) => {\r\n                            let t = async () => {\r\n                                var url = \"http://localhost:8000/current_user/?format=json\"\r\n                                let r = await getCSRF()\r\n                                const csrftoken = r.csrfToken\r\n                                let data = await fetch(url,{                \r\n                                headers: {\r\n                                'Accept': 'application/json',\r\n                                'Content-Type': 'application/json',\r\n                                'X-CSRFToken': csrftoken\r\n                                }, \r\n                                credentials: 'include',\r\n                                }).then(response => {\r\n                                if(response.ok) {\r\n                                    console.log(\"current_user de panier process\",response)\r\n                                    return response.json();\r\n                                } else {\r\n                                    console.log(response,'Mauvaise réponse du réseau');\r\n                                }\r\n                                }).then(data => \r\n                                    {\r\n                                    return(data)\r\n                                    }\r\n                                    )\r\n                                .catch(function(error) {\r\n                                console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n                                });\r\n                                setU(data)\r\n                                return(data)\r\n                            }\r\n                            let us = await t()\r\n                                navigate('/')\r\n                                props.setModalcontent(\r\n                                <div className='d-flex flex-column justify-content-center align-items-center'>\r\n                                    <h3 className='modline'>Merci, {us.user.first_name}, pour votre commande !</h3>\r\n                                    <p className='modline'>Votre commande a été réalisé avec succés, nous venons de vous envoyer un email avec le detail de vos achats.</p>\r\n                                    <p className=\"modline\">Nous vous contacterons par email pour vous fournir les informations relative à votre commande.</p>\r\n                                    <img className='modline' src={payment} alt=\"\" style={{maxWidth:'400px',objectFit:'contain',}} />\r\n                                    \r\n                                </div>)\r\n                                gsap.from(\".modline\",{opacity: 0, scale: 0, duration: 0.4, stagger: 0.4, delay:0.5})\r\n                            \r\n                            \r\n                        }} />\r\n                    </PayPalScriptProvider>\r\n                    </div>\r\n                \r\n                )\r\n\r\n            }\r\n            }}>\r\n            <button className=\"produitBuyBtn\">Payement</button>\r\n        </div>\r\n    )\r\n    const [panierStep,setPanierStep] = useState(<Panier user={u} button={btnPanier}/>)\r\n    const [stepBarreBtn,setStepBarreBtn] = useState(btnPanier)\r\n    return (\r\n        <>   \r\n        <div className=\"main w-100\">            \r\n          <Stepbarre toPanier={goToPanier} toLivraison={goToLivraison} toChoixLivraison={goToChoixLivraison} toCommandeRecap={goToRecap}  button={stepBarreBtn}/>\r\n          <div className=\"w-100 justify-content-center\">\r\n          {panierStep}\r\n          </div>\r\n        </div> \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Panierprocess;\r\n"]},"metadata":{},"sourceType":"module"}