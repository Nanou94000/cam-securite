{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nourou\\\\Documents\\\\Developpement WEB\\\\CamSecurite-django-react\\\\frontend\\\\src\\\\pages\\\\Admin.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Admin = async props => {\n  _s();\n\n  const [u, setU] = useState('');\n\n  const getCSRF = async () => {\n    var url2 = \"http://localhost:8000/csrf/\";\n    let r = '';\n    await fetch(url2, {\n      credentials: 'include'\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"fetchCSRF panier process\");\n        r = response.json();\n      } else {\n        console.log(response, 'Mauvaise réponse du réseau');\n      }\n    }).catch(function (error) {\n      console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n    });\n    return r;\n  };\n\n  let r = await getCSRF();\n  console.log(\"csrftoken OK\", r.csrfToken);\n  let csrftoken = r.csrfToken;\n\n  let t = async () => {\n    var url = \"http://localhost:8000/current_user/?format=json\";\n    let r = await getCSRF();\n    const csrftoken = r.csrfToken;\n    let data = await fetch(url, {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'X-CSRFToken': csrftoken\n      },\n      credentials: 'include'\n    }).then(response => {\n      if (response.ok) {\n        console.log(\"current_user de panier process\", response);\n        return response.json();\n      } else {\n        console.log(response, 'Mauvaise réponse du réseau');\n      }\n    }).then(data => {\n      return data;\n    }).catch(function (error) {\n      console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\n    });\n    return data;\n  };\n\n  let us = await t();\n  setU(us);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Admin, \"/ExUh5qTp7skxAn6MJMWQ7tRjeo=\");\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["C:/Users/Nourou/Documents/Developpement WEB/CamSecurite-django-react/frontend/src/pages/Admin.js"],"names":["React","Admin","props","u","setU","useState","getCSRF","url2","r","fetch","credentials","then","response","ok","console","log","json","catch","error","message","csrfToken","csrftoken","t","url","data","headers","us"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,MAAOC,KAAP,IAAiB;AAAA;;AAC3B,QAAM,CAACC,CAAD,EAAGC,IAAH,IAAWC,QAAQ,CAAC,EAAD,CAAzB;;AACA,QAAMC,OAAO,GAAG,YAAY;AAC5B,QAAIC,IAAI,GAAG,6BAAX;AACA,QAAIC,CAAC,GAAG,EAAR;AACA,UAAMC,KAAK,CAACF,IAAD,EAAO;AACdG,MAAAA,WAAW,EAAE;AADC,KAAP,CAAL,CAEDC,IAFC,CAEIC,QAAQ,IAAI;AAClB,UAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACAP,QAAAA,CAAC,GAAGI,QAAQ,CAACI,IAAT,EAAJ;AACH,OAHD,MAGO;AACHF,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,KATC,EAUDK,KAVC,CAUK,UAASC,KAAT,EAAgB;AACvBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACC,KAZC,CAAN;AAaA,WAAOX,CAAP;AACC,GAjBD;;AAkBA,MAAIA,CAAC,GAAG,MAAMF,OAAO,EAArB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BP,CAAC,CAACY,SAA7B;AACA,MAAIC,SAAS,GAAGb,CAAC,CAACY,SAAlB;;AACA,MAAIE,CAAC,GAAG,YAAY;AAChB,QAAIC,GAAG,GAAG,iDAAV;AACA,QAAIf,CAAC,GAAG,MAAMF,OAAO,EAArB;AACA,UAAMe,SAAS,GAAGb,CAAC,CAACY,SAApB;AACA,QAAII,IAAI,GAAG,MAAMf,KAAK,CAACc,GAAD,EAAK;AACzBE,MAAAA,OAAO,EAAE;AACT,kBAAU,kBADD;AAET,wBAAgB,kBAFP;AAGT,uBAAeJ;AAHN,OADgB;AAM3BX,MAAAA,WAAW,EAAE;AANc,KAAL,CAAL,CAOdC,IAPc,CAOTC,QAAQ,IAAI;AACpB,UAAGA,QAAQ,CAACC,EAAZ,EAAgB;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA6CH,QAA7C;AACA,eAAOA,QAAQ,CAACI,IAAT,EAAP;AACH,OAHD,MAGO;AACHF,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAAqB,4BAArB;AACH;AACA,KAdgB,EAcdD,IAdc,CAcTa,IAAI,IACR;AACE,aAAOA,IAAP;AACD,KAjBY,EAmBhBP,KAnBgB,CAmBV,UAASC,KAAT,EAAgB;AACrBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oDAAoDG,KAAK,CAACC,OAAtE;AACD,KArBgB,CAAjB;AAsBA,WAAOK,IAAP;AACD,GA3BH;;AA4BE,MAAIE,EAAE,GAAG,MAAMJ,CAAC,EAAhB;AACAlB,EAAAA,IAAI,CAACsB,EAAD,CAAJ;AACF,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CA1DD;;GAAMzB,K;;KAAAA,K;AA4DN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Admin = async (props) => {\r\n    const [u,setU] = useState('')\r\n    const getCSRF = async () => {\r\n    var url2 = \"http://localhost:8000/csrf/\"\r\n    let r = '' \r\n    await fetch(url2, {\r\n        credentials: 'include',\r\n      }).then(response => {\r\n        if(response.ok) {\r\n            console.log(\"fetchCSRF panier process\")\r\n            r = response.json();\r\n        } else {\r\n            console.log(response,'Mauvaise réponse du réseau');\r\n        }\r\n        })\r\n        .catch(function(error) {\r\n        console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n        });\r\n    return r\r\n    }\r\n    let r = await getCSRF()\r\n    console.log(\"csrftoken OK\",r.csrfToken)\r\n    let csrftoken = r.csrfToken\r\n    let t = async () => {\r\n        var url = \"http://localhost:8000/current_user/?format=json\"\r\n        let r = await getCSRF()\r\n        const csrftoken = r.csrfToken\r\n        let data = await fetch(url,{                \r\n          headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'X-CSRFToken': csrftoken\r\n        }, \r\n        credentials: 'include',\r\n        }).then(response => {\r\n        if(response.ok) {\r\n            console.log(\"current_user de panier process\",response)\r\n            return response.json();\r\n        } else {\r\n            console.log(response,'Mauvaise réponse du réseau');\r\n        }\r\n        }).then(data => \r\n            {\r\n              return(data)\r\n            }\r\n            )\r\n        .catch(function(error) {\r\n          console.log('Il y a eu un problème avec l\\'opération fetch: ' + error.message);\r\n        });\r\n        return data\r\n      }\r\n      let us = await t()\r\n      setU(us)\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Admin;\r\n"]},"metadata":{},"sourceType":"module"}