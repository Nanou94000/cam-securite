{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nourou\\\\Documents\\\\Developpement WEB\\\\bmc-django-react\\\\frontend\\\\src\\\\index.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap.js';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport threeObject from './megaphone.gltf';\nimport threeTexture from './megaphonet.hdr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\nlet camera, scene, renderer;\ninit();\nrender();\n\nfunction init() {\n  let container = document.createElement('div');\n  container.setAttribute('id', 'threeObj');\n  document.getElementById(\"three\").appendChild(container);\n  $(\"#threeObj\").addClass(\"position-absolute start-0 top-0\");\n  camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.25, 20);\n  camera.position.set(-1.8, 0.6, 2.7);\n  scene = new THREE.Scene();\n  new RGBELoader().load(threeTexture, function (texture) {\n    const light = new THREE.AmbientLight(0x404040); // soft white light\n\n    scene.add(light);\n    /*texture.mapping = THREE.EquirectangularReflectionMapping;\n     scene.background = texture;\n    scene.environment = texture;*/\n\n    render(); // model\n\n    const loader = new GLTFLoader();\n    loader.load(threeObject, function (gltf) {\n      scene.add(gltf.scene);\n      render();\n    });\n  });\n  renderer = new THREE.WebGLRenderer({\n    antialias: true\n  });\n  renderer.setPixelRatio(window.devicePixelRatio);\n  renderer.setSize(window.innerWidth / 2, window.innerHeight);\n  renderer.toneMapping = THREE.ACESFilmicToneMapping;\n  renderer.toneMappingExposure = 1;\n  renderer.outputEncoding = THREE.sRGBEncoding;\n  container.appendChild(renderer.domElement);\n  const controls = new OrbitControls(camera, renderer.domElement);\n  controls.addEventListener('change', render); // use if there is no animation loop\n\n  controls.minDistance = 2;\n  controls.maxDistance = 10;\n  controls.target.set(0, 0, -0.2);\n  controls.update();\n  window.addEventListener('resize', onWindowResize);\n}\n\nfunction onWindowResize() {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth / 2, window.innerHeight);\n  render();\n} //\n\n\nfunction render() {\n  renderer.render(scene, camera);\n}","map":{"version":3,"sources":["C:/Users/Nourou/Documents/Developpement WEB/bmc-django-react/frontend/src/index.js"],"names":["React","$","ReactDOM","App","reportWebVitals","BrowserRouter","THREE","GLTFLoader","RGBELoader","OrbitControls","threeObject","threeTexture","render","document","getElementById","camera","scene","renderer","init","container","createElement","setAttribute","appendChild","addClass","PerspectiveCamera","window","innerWidth","innerHeight","position","set","Scene","load","texture","light","AmbientLight","add","loader","gltf","WebGLRenderer","antialias","setPixelRatio","devicePixelRatio","setSize","toneMapping","ACESFilmicToneMapping","toneMappingExposure","outputEncoding","sRGBEncoding","domElement","controls","addEventListener","minDistance","maxDistance","target","update","onWindowResize","aspect","updateProjectionMatrix"],"mappings":"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","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap/dist/js/bootstrap.js'\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as THREE from 'three';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { RGBELoader } from 'three/examples/jsm/loaders/RGBELoader';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport threeObject from './megaphone.gltf';\nimport threeTexture from './megaphonet.hdr'\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\nlet camera, scene, renderer;\n\ninit();\nrender();\n\nfunction init() {\n\n  let container = document.createElement( 'div' );\n  container.setAttribute('id','threeObj');\n  document.getElementById(\"three\").appendChild( container );\n  $(\"#threeObj\").addClass(\"position-absolute start-0 top-0\")\n\n  camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 0.25, 20 );\n  camera.position.set( - 1.8, 0.6, 2.7 );\n\n  scene = new THREE.Scene();\n\n  new RGBELoader()\n    .load( threeTexture, function ( texture ) {\n      const light = new THREE.AmbientLight( 0x404040 ); // soft white light\nscene.add( light );\n      /*texture.mapping = THREE.EquirectangularReflectionMapping;\n\n      scene.background = texture;\n      scene.environment = texture;*/\n\n      render();\n\n      // model\n\n      const loader = new GLTFLoader();\n      loader.load( threeObject, function ( gltf ) {\n\n        scene.add( gltf.scene );\n\n        render();\n\n      } );\n\n    } );\n\n  renderer = new THREE.WebGLRenderer( { antialias: true } );\n  renderer.setPixelRatio( window.devicePixelRatio );\n  renderer.setSize( window.innerWidth/2, window.innerHeight );\n  renderer.toneMapping = THREE.ACESFilmicToneMapping;\n  renderer.toneMappingExposure = 1;\n  renderer.outputEncoding = THREE.sRGBEncoding;\n  container.appendChild( renderer.domElement );\n\n  const controls = new OrbitControls( camera, renderer.domElement );\n  controls.addEventListener( 'change', render ); // use if there is no animation loop\n  controls.minDistance = 2;\n  controls.maxDistance = 10;\n  controls.target.set( 0, 0, - 0.2 );\n  controls.update();\n\n  window.addEventListener( 'resize', onWindowResize );\n\n}\n\nfunction onWindowResize() {\n\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n\n  renderer.setSize( window.innerWidth/2, window.innerHeight );\n\n  render();\n\n}\n\n//\n\nfunction render() {\n\n  renderer.render( scene, camera );\n\n}"]},"metadata":{},"sourceType":"module"}